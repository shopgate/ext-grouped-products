// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CTAs (product header) Rendering should render CTAButtons when data is available 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(CTAButtons)>
    <CTAButtons
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isLoading": true,
          "isOrderable": false,
        }
      }
      handleAddToCart={[Function]}
      isAddToCartButtonVisible={true}
      isFavorite={true}
      product={
        Object {
          "flags": Object {
            "hasOptions": false,
            "hasVariants": true,
          },
          "id": "product_1",
          "name": "Product No. 1",
        }
      }
    >
      <div
        className="css-1ldzh7h"
      >
        <Connect(FavoritesButton)
          active={true}
          className="css-h7rvbh"
          productId="product_1"
          rippleClassName="css-1tdptiz"
        >
          <FavoritesButton
            active={true}
            addFavorites={[Function]}
            className="css-h7rvbh"
            noShadow={false}
            onRippleComplete={[Function]}
            once={false}
            productId="product_1"
            removeFavorites={[Function]}
            removeThrottle={0}
            removeWithRelatives={false}
            rippleClassName="css-1tdptiz"
          />
        </Connect(FavoritesButton)>
        <AddToCartPicker
          buttonProps={
            Object {
              "buttonSize": 56,
              "iconSize": 24,
              "isDisabled": false,
              "isLoading": true,
              "isOrderable": false,
              "type": "default",
            }
          }
          clickDelay={150}
          handleAddToCart={[Function]}
          productId="product_1"
          stock={null}
        >
          <Picker
            buttonComponent={[Function]}
            buttonProps={
              Object {
                "addedQuantity": 0,
                "buttonSize": 56,
                "className": "css-l6qlih",
                "handleAddToCart": [Function],
                "hasLoading": true,
                "iconSize": 24,
                "isDisabled": false,
                "isLoading": true,
                "isOrderable": false,
                "noShadow": true,
                "type": "default",
              }
            }
            className=""
            disabled={false}
            duration={300}
            isOpen={false}
            items={Array []}
            label=""
            listComponent={[Function]}
            modalComponent={[Function]}
            onChange={[Function]}
            onClose={[Function]}
            placeholder="Pick ..."
            value={null}
          >
            <div
              className=""
            >
              <PickerAddToCartButton
                addedQuantity={0}
                buttonSize={56}
                className="css-l6qlih"
                disabled={false}
                handleAddToCart={[Function]}
                hasLoading={true}
                iconSize={24}
                isDisabled={false}
                isLoading={true}
                isOrderable={false}
                label="Pick ..."
                noShadow={true}
                openList={[Function]}
                type="default"
                value=""
              >
                <button
                  onClick={[Function]}
                />
              </PickerAddToCartButton>
              <Portal
                isOpened={true}
                onClose={[Function]}
                onOpen={[Function]}
                onUpdate={[Function]}
              />
            </div>
          </Picker>
        </AddToCartPicker>
      </div>
    </CTAButtons>
  </Connect(CTAButtons)>
</Provider>
`;
