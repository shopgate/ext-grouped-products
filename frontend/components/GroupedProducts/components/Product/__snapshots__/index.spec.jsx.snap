// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Product /> should render a msrp discounted product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "4711",
        "name": "A discounted product with msrp",
        "price": Object {
          "currency": "EUR",
          "discount": 50,
          "info": "",
          "msrp": 10,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      handleAddToCart={[Function]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "4711",
          "name": "A discounted product with msrp",
          "price": Object {
            "currency": "EUR",
            "discount": 50,
            "info": "",
            "msrp": 10,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A discounted product with msrp"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A discounted product with msrp
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Lorem Ipsum"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Lorem Ipsum"
                >
                  Lorem Ipsum
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <AddToCartPicker
                buttonProps={
                  Object {
                    "isDisabled": false,
                    "isOrderable": true,
                    "type": "grouped",
                  }
                }
                className="css-1ej66kr"
                clickDelay={150}
                handleAddToCart={[Function]}
                productId="4711"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": true,
                    "quantity": 4,
                  }
                }
              >
                <Picker
                  buttonComponent={[Function]}
                  buttonProps={
                    Object {
                      "addedQuantity": 0,
                      "className": "css-l6qlih",
                      "handleAddToCart": [Function],
                      "hasLoading": true,
                      "isDisabled": false,
                      "isLoading": false,
                      "isOrderable": true,
                      "noShadow": true,
                      "type": "grouped",
                    }
                  }
                  className=""
                  disabled={false}
                  duration={300}
                  isOpen={false}
                  items={
                    Array [
                      Object {
                        "label": "1",
                        "value": 1,
                      },
                      Object {
                        "label": "2",
                        "value": 2,
                      },
                      Object {
                        "label": "3",
                        "value": 3,
                      },
                      Object {
                        "label": "4",
                        "value": 4,
                      },
                    ]
                  }
                  label=""
                  listComponent={[Function]}
                  modalComponent={[Function]}
                  onChange={[Function]}
                  onClose={[Function]}
                  placeholder="Pick ..."
                  value={null}
                >
                  <div
                    className=""
                  >
                    <PickerAddToCartButton
                      addedQuantity={0}
                      buttonSize={40}
                      className="css-l6qlih"
                      disabled={false}
                      handleAddToCart={[Function]}
                      hasLoading={true}
                      iconSize={20}
                      isDisabled={false}
                      isLoading={false}
                      isOrderable={true}
                      label="Pick ..."
                      noShadow={true}
                      openList={[Function]}
                      type="grouped"
                      value=""
                    >
                      <button
                        className="css-l6qlih css-zby7a7 css-31obrv"
                        data-test-id="AddToCartButton"
                        onClick={[Function]}
                      >
                        <div
                          className="css-rukjns css-1gleer"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                        >
                          <IndicatorCircle
                            color="#5ccee3"
                            paused={true}
                            size={32}
                            strokeWidth={5}
                          >
                            <svg
                              className="css-17zev8s"
                              height={32}
                              viewBox="25 25 50 50"
                              width={32}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <circle
                                className="css-1n2s8pv"
                                cx="50"
                                cy="50"
                                r="20"
                              />
                            </svg>
                          </IndicatorCircle>
                        </div>
                        <div
                          className="css-rukjns"
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, 300%, 0)",
                            }
                          }
                        >
                          <Tick>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </Tick>
                        </div>
                        <div
                          className="css-rukjns"
                          onAnimationEnd={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, -50%, 0)",
                            }
                          }
                        >
                          <CartPlus>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </CartPlus>
                        </div>
                      </button>
                    </PickerAddToCartButton>
                    <Portal
                      isOpened={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      onUpdate={[Function]}
                    />
                  </div>
                </Picker>
              </AddToCartPicker>
              <div
                className="css-h0biv2"
              >
                <Translate
                  className="css-14aq3ya"
                  params={Object {}}
                  string="price.msrp"
                >
                  <span
                    className="css-14aq3ya"
                  >
                    price.msrp
                  </span>
                </Translate>
                <PriceStriked
                  className="css-117ocmm"
                  currency="EUR"
                  value={10}
                >
                  <div
                    className="css-1sagvrb css-117ocmm "
                  >
                    <span
                      data-test-id="strikedPrice: 10"
                    >
                      <FormatPrice
                        className=""
                        currency="EUR"
                        fractions={true}
                        price={10}
                      >
                        <span
                          className=""
                        >
                          p
                        </span>
                      </FormatPrice>
                    </span>
                  </div>
                </PriceStriked>
              </div>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={true}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7 css-1ncyhu"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render a not orderable product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "foo",
        "name": "A not orderable product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": false,
          "quantity": 0,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": true,
          "isOrderable": false,
        }
      }
      handleAddToCart={[Function]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "foo",
          "name": "A not orderable product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": false,
            "quantity": 0,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A not orderable product"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A not orderable product
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Lorem Ipsum"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Lorem Ipsum"
                >
                  Lorem Ipsum
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <AddToCartPicker
                buttonProps={
                  Object {
                    "isDisabled": true,
                    "isOrderable": false,
                    "type": "grouped",
                  }
                }
                className="css-1ej66kr"
                clickDelay={150}
                handleAddToCart={[Function]}
                productId="foo"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": false,
                    "quantity": 0,
                  }
                }
              >
                <Picker
                  buttonComponent={[Function]}
                  buttonProps={
                    Object {
                      "addedQuantity": 0,
                      "className": "css-xv46o",
                      "handleAddToCart": [Function],
                      "hasLoading": true,
                      "isDisabled": true,
                      "isLoading": false,
                      "isOrderable": false,
                      "noShadow": true,
                      "type": "grouped",
                    }
                  }
                  className=""
                  disabled={false}
                  duration={300}
                  isOpen={false}
                  items={Array []}
                  label=""
                  listComponent={[Function]}
                  modalComponent={[Function]}
                  onChange={[Function]}
                  onClose={[Function]}
                  placeholder="Pick ..."
                  value={null}
                >
                  <div
                    className=""
                  >
                    <PickerAddToCartButton
                      addedQuantity={0}
                      buttonSize={40}
                      className="css-xv46o"
                      disabled={false}
                      handleAddToCart={[Function]}
                      hasLoading={true}
                      iconSize={20}
                      isDisabled={true}
                      isLoading={false}
                      isOrderable={false}
                      label="Pick ..."
                      noShadow={true}
                      openList={[Function]}
                      type="grouped"
                      value=""
                    >
                      <button
                        className="css-xv46o css-zby7a7 css-15s4nvk"
                        data-test-id="AddToCartButton"
                        onClick={[Function]}
                      >
                        <div
                          className="css-rukjns css-1gleer"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                        >
                          <IndicatorCircle
                            color="#5ccee3"
                            paused={true}
                            size={32}
                            strokeWidth={5}
                          >
                            <svg
                              className="css-17zev8s"
                              height={32}
                              viewBox="25 25 50 50"
                              width={32}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <circle
                                className="css-1n2s8pv"
                                cx="50"
                                cy="50"
                                r="20"
                              />
                            </svg>
                          </IndicatorCircle>
                        </div>
                        <div
                          className="css-rukjns"
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, 300%, 0)",
                            }
                          }
                        >
                          <Tick>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </Tick>
                        </div>
                        <div
                          className="css-rukjns"
                          onAnimationEnd={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, -50%, 0)",
                            }
                          }
                        >
                          <CartPlus>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </CartPlus>
                        </div>
                      </button>
                    </PickerAddToCartButton>
                    <Portal
                      isOpened={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      onUpdate={[Function]}
                    />
                  </div>
                </Picker>
              </AddToCartPicker>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={false}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render a regular product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      handleAddToCart={[Function]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A shiny product"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A shiny product
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Lorem Ipsum"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Lorem Ipsum"
                >
                  Lorem Ipsum
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <AddToCartPicker
                buttonProps={
                  Object {
                    "isDisabled": false,
                    "isOrderable": true,
                    "type": "grouped",
                  }
                }
                className="css-1ej66kr"
                clickDelay={150}
                handleAddToCart={[Function]}
                productId="1337"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": true,
                    "quantity": 4,
                  }
                }
              >
                <Picker
                  buttonComponent={[Function]}
                  buttonProps={
                    Object {
                      "addedQuantity": 0,
                      "className": "css-l6qlih",
                      "handleAddToCart": [Function],
                      "hasLoading": true,
                      "isDisabled": false,
                      "isLoading": false,
                      "isOrderable": true,
                      "noShadow": true,
                      "type": "grouped",
                    }
                  }
                  className=""
                  disabled={false}
                  duration={300}
                  isOpen={false}
                  items={
                    Array [
                      Object {
                        "label": "1",
                        "value": 1,
                      },
                      Object {
                        "label": "2",
                        "value": 2,
                      },
                      Object {
                        "label": "3",
                        "value": 3,
                      },
                      Object {
                        "label": "4",
                        "value": 4,
                      },
                    ]
                  }
                  label=""
                  listComponent={[Function]}
                  modalComponent={[Function]}
                  onChange={[Function]}
                  onClose={[Function]}
                  placeholder="Pick ..."
                  value={null}
                >
                  <div
                    className=""
                  >
                    <PickerAddToCartButton
                      addedQuantity={0}
                      buttonSize={40}
                      className="css-l6qlih"
                      disabled={false}
                      handleAddToCart={[Function]}
                      hasLoading={true}
                      iconSize={20}
                      isDisabled={false}
                      isLoading={false}
                      isOrderable={true}
                      label="Pick ..."
                      noShadow={true}
                      openList={[Function]}
                      type="grouped"
                      value=""
                    >
                      <button
                        className="css-l6qlih css-zby7a7 css-31obrv"
                        data-test-id="AddToCartButton"
                        onClick={[Function]}
                      >
                        <div
                          className="css-rukjns css-1gleer"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                        >
                          <IndicatorCircle
                            color="#5ccee3"
                            paused={true}
                            size={32}
                            strokeWidth={5}
                          >
                            <svg
                              className="css-17zev8s"
                              height={32}
                              viewBox="25 25 50 50"
                              width={32}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <circle
                                className="css-1n2s8pv"
                                cx="50"
                                cy="50"
                                r="20"
                              />
                            </svg>
                          </IndicatorCircle>
                        </div>
                        <div
                          className="css-rukjns"
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, 300%, 0)",
                            }
                          }
                        >
                          <Tick>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </Tick>
                        </div>
                        <div
                          className="css-rukjns"
                          onAnimationEnd={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, -50%, 0)",
                            }
                          }
                        >
                          <CartPlus>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </CartPlus>
                        </div>
                      </button>
                    </PickerAddToCartButton>
                    <Portal
                      isOpened={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      onUpdate={[Function]}
                    />
                  </div>
                </Picker>
              </AddToCartPicker>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={false}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render a strike price discounted product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "1985",
        "name": "A discounted product with stike price and info",
        "price": Object {
          "currency": "EUR",
          "discount": 50,
          "info": "5 EUR / kg",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 10,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      handleAddToCart={[Function]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "1985",
          "name": "A discounted product with stike price and info",
          "price": Object {
            "currency": "EUR",
            "discount": 50,
            "info": "5 EUR / kg",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 10,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A discounted product with stike price and info"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A discounted product with stike price and info
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Lorem Ipsum"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Lorem Ipsum"
                >
                  Lorem Ipsum
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <AddToCartPicker
                buttonProps={
                  Object {
                    "isDisabled": false,
                    "isOrderable": true,
                    "type": "grouped",
                  }
                }
                className="css-1ej66kr"
                clickDelay={150}
                handleAddToCart={[Function]}
                productId="1985"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": true,
                    "quantity": 4,
                  }
                }
              >
                <Picker
                  buttonComponent={[Function]}
                  buttonProps={
                    Object {
                      "addedQuantity": 0,
                      "className": "css-l6qlih",
                      "handleAddToCart": [Function],
                      "hasLoading": true,
                      "isDisabled": false,
                      "isLoading": false,
                      "isOrderable": true,
                      "noShadow": true,
                      "type": "grouped",
                    }
                  }
                  className=""
                  disabled={false}
                  duration={300}
                  isOpen={false}
                  items={
                    Array [
                      Object {
                        "label": "1",
                        "value": 1,
                      },
                      Object {
                        "label": "2",
                        "value": 2,
                      },
                      Object {
                        "label": "3",
                        "value": 3,
                      },
                      Object {
                        "label": "4",
                        "value": 4,
                      },
                    ]
                  }
                  label=""
                  listComponent={[Function]}
                  modalComponent={[Function]}
                  onChange={[Function]}
                  onClose={[Function]}
                  placeholder="Pick ..."
                  value={null}
                >
                  <div
                    className=""
                  >
                    <PickerAddToCartButton
                      addedQuantity={0}
                      buttonSize={40}
                      className="css-l6qlih"
                      disabled={false}
                      handleAddToCart={[Function]}
                      hasLoading={true}
                      iconSize={20}
                      isDisabled={false}
                      isLoading={false}
                      isOrderable={true}
                      label="Pick ..."
                      noShadow={true}
                      openList={[Function]}
                      type="grouped"
                      value=""
                    >
                      <button
                        className="css-l6qlih css-zby7a7 css-31obrv"
                        data-test-id="AddToCartButton"
                        onClick={[Function]}
                      >
                        <div
                          className="css-rukjns css-1gleer"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                        >
                          <IndicatorCircle
                            color="#5ccee3"
                            paused={true}
                            size={32}
                            strokeWidth={5}
                          >
                            <svg
                              className="css-17zev8s"
                              height={32}
                              viewBox="25 25 50 50"
                              width={32}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <circle
                                className="css-1n2s8pv"
                                cx="50"
                                cy="50"
                                r="20"
                              />
                            </svg>
                          </IndicatorCircle>
                        </div>
                        <div
                          className="css-rukjns"
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, 300%, 0)",
                            }
                          }
                        >
                          <Tick>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </Tick>
                        </div>
                        <div
                          className="css-rukjns"
                          onAnimationEnd={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "translate3d(0, -50%, 0)",
                            }
                          }
                        >
                          <CartPlus>
                            <Icon
                              className=""
                              color={null}
                              content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                              size="inherit"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-yys9hb "
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                  }
                                }
                                style={
                                  Object {
                                    "fill": null,
                                    "fontSize": "inherit",
                                  }
                                }
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </Icon>
                          </CartPlus>
                        </div>
                      </button>
                    </PickerAddToCartButton>
                    <Portal
                      isOpened={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      onUpdate={[Function]}
                    />
                  </div>
                </Picker>
              </AddToCartPicker>
              <PriceStriked
                className="css-117ocmm"
                currency="EUR"
                value={10}
              >
                <div
                  className="css-1sagvrb css-117ocmm "
                >
                  <span
                    data-test-id="strikedPrice: 10"
                  >
                    <FormatPrice
                      className=""
                      currency="EUR"
                      fractions={true}
                      price={10}
                    >
                      <span
                        className=""
                      >
                        p
                      </span>
                    </FormatPrice>
                  </span>
                </div>
              </PriceStriked>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={true}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7 css-1ncyhu"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
              <PriceInfo
                className="css-7hzrhp"
                text="5 EUR / kg"
              >
                <div
                  className="css-1kqiarg css-7hzrhp"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "5 EUR / kg",
                    }
                  }
                  data-test-id="priceInfo: 5 EUR / kg"
                />
              </PriceInfo>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;
