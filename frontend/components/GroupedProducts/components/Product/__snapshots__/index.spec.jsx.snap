// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Product /> should render a discounted product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "id": "4711",
        "name": "A discounted product",
        "price": Object {
          "currency": "EUR",
          "discount": 50,
          "msrp": 10,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 30,
        },
      }
    }
  >
    <Product
      baseProduct={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 30,
          },
        }
      }
      dispatch={[MockFunction]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "4711",
          "name": "A discounted product",
          "price": Object {
            "currency": "EUR",
            "discount": 50,
            "msrp": 10,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 30,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A discounted product"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A discounted product
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Mocked Available"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Mocked Available"
                >
                  Mocked Available
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <Connect(AddToCartPicker)
                productId="4711"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": true,
                    "quantity": 30,
                  }
                }
              >
                <AddToCartPicker
                  addProductToCart={[Function]}
                  clickDelay={150}
                  maxEntries={50}
                  productId="4711"
                  stock={
                    Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 30,
                    }
                  }
                >
                  <style>
                    
.css-h69706 { border-radius: 10px 10px 0 0; }
.css-1aon90l { max-height: calc(100vh - 71px - var(--safe-area-inset-top)); }

                  </style>
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "addedQuantity": 0,
                        "className": "css-mbcx74",
                        "handleAddToCart": [Function],
                        "isDisabled": false,
                        "isLoading": false,
                        "isOrderable": true,
                        "noShadow": true,
                      }
                    }
                    className="css-o9gtb0"
                    disabled={false}
                    duration={300}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "label": "1",
                          "value": 1,
                        },
                        Object {
                          "label": "2",
                          "value": 2,
                        },
                        Object {
                          "label": "3",
                          "value": 3,
                        },
                        Object {
                          "label": "4",
                          "value": 4,
                        },
                        Object {
                          "label": "5",
                          "value": 5,
                        },
                        Object {
                          "label": "6",
                          "value": 6,
                        },
                        Object {
                          "label": "7",
                          "value": 7,
                        },
                        Object {
                          "label": "8",
                          "value": 8,
                        },
                        Object {
                          "label": "9",
                          "value": 9,
                        },
                        Object {
                          "label": "10",
                          "value": 10,
                        },
                        Object {
                          "label": "11",
                          "value": 11,
                        },
                        Object {
                          "label": "12",
                          "value": 12,
                        },
                        Object {
                          "label": "13",
                          "value": 13,
                        },
                        Object {
                          "label": "14",
                          "value": 14,
                        },
                        Object {
                          "label": "15",
                          "value": 15,
                        },
                        Object {
                          "label": "16",
                          "value": 16,
                        },
                        Object {
                          "label": "17",
                          "value": 17,
                        },
                        Object {
                          "label": "18",
                          "value": 18,
                        },
                        Object {
                          "label": "19",
                          "value": 19,
                        },
                        Object {
                          "label": "20",
                          "value": 20,
                        },
                        Object {
                          "label": "21",
                          "value": 21,
                        },
                        Object {
                          "label": "22",
                          "value": 22,
                        },
                        Object {
                          "label": "23",
                          "value": 23,
                        },
                        Object {
                          "label": "24",
                          "value": 24,
                        },
                        Object {
                          "label": "25",
                          "value": 25,
                        },
                        Object {
                          "label": "26",
                          "value": 26,
                        },
                        Object {
                          "label": "27",
                          "value": 27,
                        },
                        Object {
                          "label": "28",
                          "value": 28,
                        },
                        Object {
                          "label": "29",
                          "value": 29,
                        },
                      ]
                    }
                    label=""
                    listComponent={[Function]}
                    modalComponent={[Function]}
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder="Pick ..."
                    value={null}
                  >
                    <div
                      className="css-o9gtb0"
                    >
                      <PickerAddToCartButton
                        addedQuantity={0}
                        buttonSize={40}
                        className="css-mbcx74"
                        disabled={false}
                        handleAddToCart={[Function]}
                        hasLoading={false}
                        iconSize={20}
                        isDisabled={false}
                        isLoading={false}
                        isOrderable={true}
                        label="Pick ..."
                        noShadow={true}
                        openList={[Function]}
                        value=""
                      >
                        <button
                          className="css-mbcx74 css-zby7a7 css-31obrv"
                          data-test-id="AddToCartButton"
                          onClick={[Function]}
                        >
                          <div
                            className="css-rukjns"
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, 300%, 0)",
                              }
                            }
                          >
                            <Tick>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </Tick>
                          </div>
                          <div
                            className="css-rukjns"
                            onAnimationEnd={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, -50%, 0)",
                              }
                            }
                          >
                            <CartPlus>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </CartPlus>
                          </div>
                        </button>
                      </PickerAddToCartButton>
                      <Portal
                        isOpened={true}
                        onClose={[Function]}
                        onOpen={[Function]}
                        onUpdate={[Function]}
                      />
                    </div>
                  </Picker>
                </AddToCartPicker>
              </Connect(AddToCartPicker)>
              <PriceStriked
                className="css-117ocmm"
                currency="EUR"
                value={10}
              >
                <div
                  className="css-1sagvrb css-117ocmm "
                >
                  <span
                    data-test-id="strikedPrice: 10"
                  >
                    <FormatPrice
                      className=""
                      currency="EUR"
                      fractions={true}
                      price={10}
                    >
                      <span
                        className=""
                      >
                        p
                      </span>
                    </FormatPrice>
                  </span>
                </div>
              </PriceStriked>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={true}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7 css-1ncyhu"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render a not orderable product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "id": "1234",
        "name": "A not orderable product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": false,
          "quantity": 0,
        },
      }
    }
  >
    <Product
      baseProduct={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 30,
          },
        }
      }
      dispatch={[MockFunction]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "1234",
          "name": "A not orderable product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": false,
            "quantity": 0,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A not orderable product"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A not orderable product
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Mocked Available"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Mocked Available"
                >
                  Mocked Available
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <Connect(AddToCartPicker)
                productId="1234"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": false,
                    "quantity": 0,
                  }
                }
              >
                <AddToCartPicker
                  addProductToCart={[Function]}
                  clickDelay={150}
                  maxEntries={50}
                  productId="1234"
                  stock={
                    Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": false,
                      "quantity": 0,
                    }
                  }
                >
                  <style>
                    
.css-h69706 { border-radius: 10px 10px 0 0; }
.css-1aon90l { max-height: calc(100vh - 71px - var(--safe-area-inset-top)); }

                  </style>
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "addedQuantity": 0,
                        "className": "css-mbcx74",
                        "handleAddToCart": [Function],
                        "isDisabled": true,
                        "isLoading": false,
                        "isOrderable": false,
                        "noShadow": true,
                      }
                    }
                    className="css-o9gtb0"
                    disabled={false}
                    duration={300}
                    isOpen={false}
                    items={Array []}
                    label=""
                    listComponent={[Function]}
                    modalComponent={[Function]}
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder="Pick ..."
                    value={null}
                  >
                    <div
                      className="css-o9gtb0"
                    >
                      <PickerAddToCartButton
                        addedQuantity={0}
                        buttonSize={40}
                        className="css-mbcx74"
                        disabled={false}
                        handleAddToCart={[Function]}
                        hasLoading={false}
                        iconSize={20}
                        isDisabled={true}
                        isLoading={false}
                        isOrderable={false}
                        label="Pick ..."
                        noShadow={true}
                        openList={[Function]}
                        value=""
                      >
                        <button
                          className="css-mbcx74 css-zby7a7 css-15s4nvk"
                          data-test-id="AddToCartButton"
                          onClick={[Function]}
                        >
                          <div
                            className="css-rukjns"
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, 300%, 0)",
                              }
                            }
                          >
                            <Tick>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </Tick>
                          </div>
                          <div
                            className="css-rukjns"
                            onAnimationEnd={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, -50%, 0)",
                              }
                            }
                          >
                            <CartPlus>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </CartPlus>
                          </div>
                        </button>
                      </PickerAddToCartButton>
                      <Portal
                        isOpened={true}
                        onClose={[Function]}
                        onOpen={[Function]}
                        onUpdate={[Function]}
                      />
                    </div>
                  </Picker>
                </AddToCartPicker>
              </Connect(AddToCartPicker)>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={false}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render a regular product as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    baseProduct={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 30,
        },
      }
    }
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 30,
        },
      }
    }
  >
    <Product
      baseProduct={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 30,
          },
        }
      }
      dispatch={[MockFunction]}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 30,
          },
        }
      }
    >
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a"
        >
          <GridItem
            className="css-sg184b"
            component="li"
            grow={0}
            shrink={0}
          >
            <li
              className="css-sg184b css-1l9a57c"
            >
              <Image
                alt="A shiny product"
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                itemProp="image"
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="https://cdn.acme.com/kitten.jpg"
                transition={null}
              >
                <div
                  className="css-326p2s "
                />
              </Image>
            </li>
          </GridItem>
          <GridItem
            className="css-nil"
            component="li"
            grow={4}
            shrink={1}
          >
            <li
              className="css-nil css-ke56yp"
            >
              <Ellipsis
                className="css-ud99sa"
                ellipsis="..."
                rows={3}
              >
                <Dotdotdot
                  clamp={3}
                  className="css-ud99sa"
                  ellipsis="..."
                  tagName="div"
                  truncationChar="â€¦"
                  useNativeClamp={true}
                >
                  <div
                    className="css-ud99sa"
                  >
                    A shiny product
                  </div>
                </Dotdotdot>
              </Ellipsis>
              <Availability
                className="css-117ocmm"
                showWhenAvailable={true}
                state="ok"
                text="Mocked Available"
              >
                <div
                  className="css-117ocmm css-1ixzglu"
                  data-test-id="availabilityText: Mocked Available"
                >
                  Mocked Available
                </div>
              </Availability>
            </li>
          </GridItem>
          <GridItem
            className="css-1onmrls"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1onmrls css-1gs0ko2"
            >
              <Connect(AddToCartPicker)
                productId="1337"
                stock={
                  Object {
                    "ignoreQuantity": false,
                    "info": "Info",
                    "maxOrderQuantity": 1000,
                    "minOrderQuantity": 1,
                    "orderable": true,
                    "quantity": 30,
                  }
                }
              >
                <AddToCartPicker
                  addProductToCart={[Function]}
                  clickDelay={150}
                  maxEntries={50}
                  productId="1337"
                  stock={
                    Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 30,
                    }
                  }
                >
                  <style>
                    
.css-h69706 { border-radius: 10px 10px 0 0; }
.css-1aon90l { max-height: calc(100vh - 71px - var(--safe-area-inset-top)); }

                  </style>
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "addedQuantity": 0,
                        "className": "css-mbcx74",
                        "handleAddToCart": [Function],
                        "isDisabled": false,
                        "isLoading": false,
                        "isOrderable": true,
                        "noShadow": true,
                      }
                    }
                    className="css-o9gtb0"
                    disabled={false}
                    duration={300}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "label": "1",
                          "value": 1,
                        },
                        Object {
                          "label": "2",
                          "value": 2,
                        },
                        Object {
                          "label": "3",
                          "value": 3,
                        },
                        Object {
                          "label": "4",
                          "value": 4,
                        },
                        Object {
                          "label": "5",
                          "value": 5,
                        },
                        Object {
                          "label": "6",
                          "value": 6,
                        },
                        Object {
                          "label": "7",
                          "value": 7,
                        },
                        Object {
                          "label": "8",
                          "value": 8,
                        },
                        Object {
                          "label": "9",
                          "value": 9,
                        },
                        Object {
                          "label": "10",
                          "value": 10,
                        },
                        Object {
                          "label": "11",
                          "value": 11,
                        },
                        Object {
                          "label": "12",
                          "value": 12,
                        },
                        Object {
                          "label": "13",
                          "value": 13,
                        },
                        Object {
                          "label": "14",
                          "value": 14,
                        },
                        Object {
                          "label": "15",
                          "value": 15,
                        },
                        Object {
                          "label": "16",
                          "value": 16,
                        },
                        Object {
                          "label": "17",
                          "value": 17,
                        },
                        Object {
                          "label": "18",
                          "value": 18,
                        },
                        Object {
                          "label": "19",
                          "value": 19,
                        },
                        Object {
                          "label": "20",
                          "value": 20,
                        },
                        Object {
                          "label": "21",
                          "value": 21,
                        },
                        Object {
                          "label": "22",
                          "value": 22,
                        },
                        Object {
                          "label": "23",
                          "value": 23,
                        },
                        Object {
                          "label": "24",
                          "value": 24,
                        },
                        Object {
                          "label": "25",
                          "value": 25,
                        },
                        Object {
                          "label": "26",
                          "value": 26,
                        },
                        Object {
                          "label": "27",
                          "value": 27,
                        },
                        Object {
                          "label": "28",
                          "value": 28,
                        },
                        Object {
                          "label": "29",
                          "value": 29,
                        },
                      ]
                    }
                    label=""
                    listComponent={[Function]}
                    modalComponent={[Function]}
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder="Pick ..."
                    value={null}
                  >
                    <div
                      className="css-o9gtb0"
                    >
                      <PickerAddToCartButton
                        addedQuantity={0}
                        buttonSize={40}
                        className="css-mbcx74"
                        disabled={false}
                        handleAddToCart={[Function]}
                        hasLoading={false}
                        iconSize={20}
                        isDisabled={false}
                        isLoading={false}
                        isOrderable={true}
                        label="Pick ..."
                        noShadow={true}
                        openList={[Function]}
                        value=""
                      >
                        <button
                          className="css-mbcx74 css-zby7a7 css-31obrv"
                          data-test-id="AddToCartButton"
                          onClick={[Function]}
                        >
                          <div
                            className="css-rukjns"
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, 300%, 0)",
                              }
                            }
                          >
                            <Tick>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </Tick>
                          </div>
                          <div
                            className="css-rukjns"
                            onAnimationEnd={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "translate3d(0, -50%, 0)",
                              }
                            }
                          >
                            <CartPlus>
                              <Icon
                                className=""
                                color={null}
                                content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                size="inherit"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  className="css-yys9hb "
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": null,
                                      "fontSize": "inherit",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  xmlns="http://www.w3.org/2000/svg"
                                />
                              </Icon>
                            </CartPlus>
                          </div>
                        </button>
                      </PickerAddToCartButton>
                      <Portal
                        isOpened={true}
                        onClose={[Function]}
                        onOpen={[Function]}
                        onUpdate={[Function]}
                      />
                    </div>
                  </Picker>
                </AddToCartPicker>
              </Connect(AddToCartPicker)>
              <Price
                className="css-1h9wty7"
                currency="EUR"
                discounted={false}
                fractions={true}
                taxDisclaimer={false}
                unitPrice={5}
                unitPriceMin={0}
              >
                <div
                  className="css-izofhs css-1h9wty7"
                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                >
                  <FormatPrice
                    className=""
                    currency="EUR"
                    fractions={true}
                    price={5}
                  >
                    <span
                      className=""
                    >
                      p
                    </span>
                  </FormatPrice>
                </div>
              </Price>
            </li>
          </GridItem>
        </ul>
      </Grid>
    </Product>
  </Connect(Product)>
</Provider>
`;
