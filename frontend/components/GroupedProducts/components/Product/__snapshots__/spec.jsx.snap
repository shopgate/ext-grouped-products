// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Product /> should render as expected when the favorite list is not active 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    conditioner={Object {}}
    hasFavorites={false}
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      conditioner={Object {}}
      handleAddToCart={[Function]}
      hasFavorites={false}
      isFavorite={true}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
      renderFlatButtons={false}
    >
      <Portal
        name="grouped-product.before"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
      <Portal
        name="grouped-product"
        props={
          Object {
            "productId": "1337",
          }
        }
      >
        <Grid
          className=""
          component="ul"
          wrap={false}
        >
          <ul
            className=" css-h7r55a"
          >
            <GridItem
              className="css-sg184b"
              component="li"
              grow={0}
              shrink={0}
            >
              <li
                className="css-sg184b css-1l9a57c"
              >
                <Portal
                  name="grouped-product.image.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.image"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Image
                    alt="A shiny product"
                    animating={true}
                    backgroundColor="#f2f2f2"
                    className=""
                    forcePlaceholder={false}
                    highestResolutionLoaded={[Function]}
                    itemProp="image"
                    onError={null}
                    onLoad={null}
                    ratio={null}
                    resolutions={
                      Array [
                        Object {
                          "blur": 2,
                          "height": 50,
                          "width": 50,
                        },
                        Object {
                          "height": 440,
                          "width": 440,
                        },
                      ]
                    }
                    src="https://cdn.acme.com/kitten.jpg"
                    srcmap={null}
                    transition={null}
                  >
                    <div
                      className="css-vfdozt "
                    />
                  </Image>
                </Portal>
                <Portal
                  name="grouped-product.image.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-nil"
              component="li"
              grow={4}
              shrink={1}
            >
              <li
                className="css-nil css-ke56yp"
              >
                <Portal
                  name="grouped-product.meta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.meta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.name.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.name"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Ellipsis
                      className="css-ud99sa"
                      ellipsis="..."
                      rows={3}
                    >
                      <Dotdotdot
                        clamp={3}
                        className="css-ud99sa"
                        ellipsis="..."
                        tagName="div"
                        truncationChar="â€¦"
                        useNativeClamp={true}
                      >
                        <div
                          className="css-ud99sa"
                        >
                          A shiny product
                        </div>
                      </Dotdotdot>
                    </Ellipsis>
                  </Portal>
                  <Portal
                    name="grouped-product.name.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.availability.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.availability"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Availability
                      className="css-117ocmm"
                      showWhenAvailable={true}
                      state="ok"
                      text="Lorem Ipsum"
                    >
                      <div
                        className="css-117ocmm css-1ixzglu"
                        data-test-id="availabilityText: Lorem Ipsum"
                      >
                        Lorem Ipsum
                      </div>
                    </Availability>
                  </Portal>
                  <Portal
                    name="grouped-product.availability.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.meta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-1onmrls"
              component="li"
              grow={0}
              shrink={1}
            >
              <li
                className="css-1onmrls"
              >
                <Portal
                  name="grouped-product.cta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.cta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.add.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.add-to-cart"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <AddToCartPicker
                      buttonProps={
                        Object {
                          "isDisabled": false,
                          "isOrderable": true,
                          "noShadow": false,
                          "type": "grouped",
                        }
                      }
                      clickDelay={150}
                      conditioner={Object {}}
                      handleAddToCart={[Function]}
                      productId="1337"
                      stock={
                        Object {
                          "ignoreQuantity": false,
                          "info": "Info",
                          "maxOrderQuantity": 1000,
                          "minOrderQuantity": 1,
                          "orderable": true,
                          "quantity": 4,
                        }
                      }
                    >
                      <ForwardRef(WithForwardedRef(Picker))
                        buttonComponent={[Function]}
                        buttonProps={
                          Object {
                            "addedQuantity": 0,
                            "className": null,
                            "conditioner": Object {},
                            "handleAddToCart": [Function],
                            "hasLoading": true,
                            "isDisabled": false,
                            "isLoading": false,
                            "isOrderable": true,
                            "noShadow": false,
                            "onClick": [Function],
                            "type": "grouped",
                          }
                        }
                        className="css-ibd9un"
                        items={
                          Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ]
                        }
                        listComponent={[Function]}
                        modalComponent={[Function]}
                        onSelect={[Function]}
                      >
                        <Picker
                          buttonComponent={[Function]}
                          buttonProps={
                            Object {
                              "addedQuantity": 0,
                              "className": null,
                              "conditioner": Object {},
                              "handleAddToCart": [Function],
                              "hasLoading": true,
                              "isDisabled": false,
                              "isLoading": false,
                              "isOrderable": true,
                              "noShadow": false,
                              "onClick": [Function],
                              "type": "grouped",
                            }
                          }
                          className="css-ibd9un"
                          disabled={false}
                          duration={300}
                          forwardedRef={null}
                          isOpen={false}
                          items={
                            Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ]
                          }
                          label=""
                          listComponent={[Function]}
                          modalComponent={[Function]}
                          onChange={[Function]}
                          onClose={[Function]}
                          onSelect={[Function]}
                          placeholder="Pick ..."
                          value={null}
                        >
                          <div
                            aria-haspopup={true}
                            className="css-ibd9un"
                            role="button"
                            tabIndex={0}
                          >
                            <AddToCartButton
                              addedQuantity={0}
                              aria-hidden={false}
                              aria-label={null}
                              buttonSize={10}
                              className={null}
                              conditioner={Object {}}
                              disabled={false}
                              forwardedRef={null}
                              handleAddToCart={[Function]}
                              hasLoading={true}
                              iconSize={10}
                              isDisabled={false}
                              isLoading={false}
                              isOrderable={true}
                              label="Pick ..."
                              noShadow={false}
                              onClick={[Function]}
                              onReset={[Function]}
                              openList={[Function]}
                              type="grouped"
                              value=""
                            >
                              <button
                                aria-hidden={false}
                                aria-label={null}
                                className="null undefined undefined"
                                data-test-id="addToCartButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <div
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, 300%, 0)",
                                    }
                                  }
                                >
                                  <Tick>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </Tick>
                                </div>
                                <div
                                  onAnimationEnd={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, -50%, 0)",
                                    }
                                  }
                                >
                                  <CartPlus>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </CartPlus>
                                </div>
                              </button>
                            </AddToCartButton>
                            <Portal
                              isOpened={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              onUpdate={[Function]}
                            />
                          </div>
                        </Picker>
                      </ForwardRef(WithForwardedRef(Picker))>
                    </AddToCartPicker>
                  </Portal>
                  <Portal
                    name="grouped-product.add.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <ProductPrice
                    price={
                      Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      }
                    }
                    renderLine={false}
                  >
                    <Portal
                      name="grouped-product.price.before"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": false,
                        }
                      }
                    />
                    <Portal
                      name="grouped-product.price"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": false,
                        }
                      }
                    >
                      <div
                        className="css-nil"
                      >
                        <Price
                          className="css-fisw11"
                          currency="EUR"
                          discounted={false}
                          fractions={true}
                          taxDisclaimer={false}
                          unitPrice={5}
                          unitPriceMin={0}
                        >
                          <div
                            className="css-izofhs css-fisw11"
                            data-test-id="minPrice: 0 price: 5 currency: EUR"
                          >
                            <span
                              aria-label="price.label"
                              role="text"
                            >
                              <FormatPrice
                                currency="EUR"
                                fractions={true}
                                price={5}
                              >
                                p
                              </FormatPrice>
                            </span>
                          </div>
                        </Price>
                      </div>
                    </Portal>
                    <Portal
                      name="grouped-product.price.after"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": false,
                        }
                      }
                    />
                  </ProductPrice>
                </Portal>
                <Portal
                  name="grouped-product.cta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
          </ul>
        </Grid>
      </Portal>
      <Portal
        name="grouped-product.after"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render as expected when the favorite list is not active 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    conditioner={Object {}}
    hasFavorites={true}
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "foo",
        "name": "A not orderable product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": false,
          "quantity": 0,
        },
      }
    }
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": true,
          "isOrderable": false,
        }
      }
      conditioner={Object {}}
      handleAddToCart={[Function]}
      hasFavorites={true}
      isFavorite={false}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "foo",
          "name": "A not orderable product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": false,
            "quantity": 0,
          },
        }
      }
      renderFlatButtons={false}
    >
      <Portal
        name="grouped-product.before"
        props={
          Object {
            "productId": "foo",
          }
        }
      />
      <Portal
        name="grouped-product"
        props={
          Object {
            "productId": "foo",
          }
        }
      >
        <Grid
          className=""
          component="ul"
          wrap={false}
        >
          <ul
            className=" css-h7r55a"
          >
            <GridItem
              className="css-sg184b"
              component="li"
              grow={0}
              shrink={0}
            >
              <li
                className="css-sg184b css-1l9a57c"
              >
                <Portal
                  name="grouped-product.image.before"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
                <Portal
                  name="grouped-product.image"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                >
                  <Image
                    alt="A not orderable product"
                    animating={true}
                    backgroundColor="#f2f2f2"
                    className=""
                    forcePlaceholder={false}
                    highestResolutionLoaded={[Function]}
                    itemProp="image"
                    onError={null}
                    onLoad={null}
                    ratio={null}
                    resolutions={
                      Array [
                        Object {
                          "blur": 2,
                          "height": 50,
                          "width": 50,
                        },
                        Object {
                          "height": 440,
                          "width": 440,
                        },
                      ]
                    }
                    src="https://cdn.acme.com/kitten.jpg"
                    srcmap={null}
                    transition={null}
                  >
                    <div
                      className="css-vfdozt "
                    />
                  </Image>
                </Portal>
                <Portal
                  name="grouped-product.image.after"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-nil"
              component="li"
              grow={4}
              shrink={1}
            >
              <li
                className="css-nil css-ke56yp"
              >
                <Portal
                  name="grouped-product.meta.before"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
                <Portal
                  name="grouped-product.meta"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.name.before"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.name"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  >
                    <Ellipsis
                      className="css-ud99sa"
                      ellipsis="..."
                      rows={3}
                    >
                      <Dotdotdot
                        clamp={3}
                        className="css-ud99sa"
                        ellipsis="..."
                        tagName="div"
                        truncationChar="â€¦"
                        useNativeClamp={true}
                      >
                        <div
                          className="css-ud99sa"
                        >
                          A not orderable product
                        </div>
                      </Dotdotdot>
                    </Ellipsis>
                  </Portal>
                  <Portal
                    name="grouped-product.name.after"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <ProductPrice
                    price={
                      Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      }
                    }
                    renderLine={true}
                  >
                    <Portal
                      name="grouped-product.price.before"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                    <Portal
                      name="grouped-product.price"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    >
                      <div
                        className="css-1yymqrw"
                      >
                        <Price
                          className="css-fisw11"
                          currency="EUR"
                          discounted={false}
                          fractions={true}
                          taxDisclaimer={false}
                          unitPrice={5}
                          unitPriceMin={0}
                        >
                          <div
                            className="css-izofhs css-fisw11"
                            data-test-id="minPrice: 0 price: 5 currency: EUR"
                          >
                            <span
                              aria-label="price.label"
                              role="text"
                            >
                              <FormatPrice
                                currency="EUR"
                                fractions={true}
                                price={5}
                              >
                                p
                              </FormatPrice>
                            </span>
                          </div>
                        </Price>
                      </div>
                    </Portal>
                    <Portal
                      name="grouped-product.price.after"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                  </ProductPrice>
                  <Portal
                    name="grouped-product.availability.before"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.availability"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  >
                    <Availability
                      className="css-117ocmm"
                      showWhenAvailable={true}
                      state="ok"
                      text="Lorem Ipsum"
                    >
                      <div
                        className="css-117ocmm css-1ixzglu"
                        data-test-id="availabilityText: Lorem Ipsum"
                      >
                        Lorem Ipsum
                      </div>
                    </Availability>
                  </Portal>
                  <Portal
                    name="grouped-product.availability.after"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.meta.after"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-1anng1p"
              component="li"
              grow={0}
              shrink={1}
            >
              <li
                className="css-1anng1p"
              >
                <Portal
                  name="grouped-product.cta.before"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
                <Portal
                  name="grouped-product.cta"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.add.before"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.add-to-cart"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  >
                    <AddToCartPicker
                      buttonProps={
                        Object {
                          "isDisabled": true,
                          "isOrderable": false,
                          "noShadow": false,
                          "type": "grouped",
                        }
                      }
                      clickDelay={150}
                      conditioner={Object {}}
                      handleAddToCart={[Function]}
                      productId="foo"
                      stock={
                        Object {
                          "ignoreQuantity": false,
                          "info": "Info",
                          "maxOrderQuantity": 1000,
                          "minOrderQuantity": 1,
                          "orderable": false,
                          "quantity": 0,
                        }
                      }
                    >
                      <ForwardRef(WithForwardedRef(Picker))
                        buttonComponent={[Function]}
                        buttonProps={
                          Object {
                            "addedQuantity": 0,
                            "className": null,
                            "conditioner": Object {},
                            "handleAddToCart": [Function],
                            "hasLoading": true,
                            "isDisabled": true,
                            "isLoading": false,
                            "isOrderable": false,
                            "noShadow": false,
                            "onClick": [Function],
                            "type": "grouped",
                          }
                        }
                        className="css-ibd9un"
                        items={Array []}
                        listComponent={[Function]}
                        modalComponent={[Function]}
                        onSelect={[Function]}
                      >
                        <Picker
                          buttonComponent={[Function]}
                          buttonProps={
                            Object {
                              "addedQuantity": 0,
                              "className": null,
                              "conditioner": Object {},
                              "handleAddToCart": [Function],
                              "hasLoading": true,
                              "isDisabled": true,
                              "isLoading": false,
                              "isOrderable": false,
                              "noShadow": false,
                              "onClick": [Function],
                              "type": "grouped",
                            }
                          }
                          className="css-ibd9un"
                          disabled={false}
                          duration={300}
                          forwardedRef={null}
                          isOpen={false}
                          items={Array []}
                          label=""
                          listComponent={[Function]}
                          modalComponent={[Function]}
                          onChange={[Function]}
                          onClose={[Function]}
                          onSelect={[Function]}
                          placeholder="Pick ..."
                          value={null}
                        >
                          <div
                            aria-haspopup={true}
                            className="css-ibd9un"
                            role="button"
                            tabIndex={0}
                          >
                            <AddToCartButton
                              addedQuantity={0}
                              aria-hidden={false}
                              aria-label={null}
                              buttonSize={10}
                              className={null}
                              conditioner={Object {}}
                              disabled={false}
                              forwardedRef={null}
                              handleAddToCart={[Function]}
                              hasLoading={true}
                              iconSize={10}
                              isDisabled={true}
                              isLoading={false}
                              isOrderable={false}
                              label="Pick ..."
                              noShadow={false}
                              onClick={[Function]}
                              onReset={[Function]}
                              openList={[Function]}
                              type="grouped"
                              value=""
                            >
                              <button
                                aria-hidden={false}
                                aria-label={null}
                                className="null undefined undefined"
                                data-test-id="addToCartButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <div
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, 300%, 0)",
                                    }
                                  }
                                >
                                  <Tick>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </Tick>
                                </div>
                                <div
                                  onAnimationEnd={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, -50%, 0)",
                                    }
                                  }
                                >
                                  <CartPlus>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </CartPlus>
                                </div>
                              </button>
                            </AddToCartButton>
                            <Portal
                              isOpened={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              onUpdate={[Function]}
                            />
                          </div>
                        </Picker>
                      </ForwardRef(WithForwardedRef(Picker))>
                    </AddToCartPicker>
                  </Portal>
                  <Portal
                    name="grouped-product.add.after"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites.before"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  >
                    <Connect(FavoritesButton)
                      active={false}
                      className="css-1dps91a"
                      noShadow={false}
                      productId="foo"
                      rippleClassName="css-1tdptiz"
                    >
                      <FavoritesButton
                        active={false}
                        addFavorites={[Function]}
                        aria-hidden={null}
                        className="css-1dps91a"
                        noShadow={false}
                        onRippleComplete={[Function]}
                        once={false}
                        productId="foo"
                        removeFavorites={[Function]}
                        removeThrottle={0}
                        removeWithRelatives={false}
                        rippleClassName="css-1tdptiz"
                      />
                    </Connect(FavoritesButton)>
                  </Portal>
                  <Portal
                    name="grouped-product.favorites.after"
                    props={
                      Object {
                        "productId": "foo",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.cta.after"
                  props={
                    Object {
                      "productId": "foo",
                    }
                  }
                />
              </li>
            </GridItem>
          </ul>
        </Grid>
      </Portal>
      <Portal
        name="grouped-product.after"
        props={
          Object {
            "productId": "foo",
          }
        }
      />
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render as expected with flat buttons 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    conditioner={Object {}}
    hasFavorites={true}
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
    renderFlatButtons={true}
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      conditioner={Object {}}
      handleAddToCart={[Function]}
      hasFavorites={true}
      isFavorite={true}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
      renderFlatButtons={true}
    >
      <Portal
        name="grouped-product.before"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
      <Portal
        name="grouped-product"
        props={
          Object {
            "productId": "1337",
          }
        }
      >
        <Grid
          className=""
          component="ul"
          wrap={false}
        >
          <ul
            className=" css-h7r55a"
          >
            <GridItem
              className="css-sg184b"
              component="li"
              grow={0}
              shrink={0}
            >
              <li
                className="css-sg184b css-1l9a57c"
              >
                <Portal
                  name="grouped-product.image.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.image"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Image
                    alt="A shiny product"
                    animating={true}
                    backgroundColor="#f2f2f2"
                    className=""
                    forcePlaceholder={false}
                    highestResolutionLoaded={[Function]}
                    itemProp="image"
                    onError={null}
                    onLoad={null}
                    ratio={null}
                    resolutions={
                      Array [
                        Object {
                          "blur": 2,
                          "height": 50,
                          "width": 50,
                        },
                        Object {
                          "height": 440,
                          "width": 440,
                        },
                      ]
                    }
                    src="https://cdn.acme.com/kitten.jpg"
                    srcmap={null}
                    transition={null}
                  >
                    <div
                      className="css-vfdozt "
                    />
                  </Image>
                </Portal>
                <Portal
                  name="grouped-product.image.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-nil"
              component="li"
              grow={4}
              shrink={1}
            >
              <li
                className="css-nil css-ke56yp"
              >
                <Portal
                  name="grouped-product.meta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.meta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.name.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.name"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Ellipsis
                      className="css-ud99sa"
                      ellipsis="..."
                      rows={3}
                    >
                      <Dotdotdot
                        clamp={3}
                        className="css-ud99sa"
                        ellipsis="..."
                        tagName="div"
                        truncationChar="â€¦"
                        useNativeClamp={true}
                      >
                        <div
                          className="css-ud99sa"
                        >
                          A shiny product
                        </div>
                      </Dotdotdot>
                    </Ellipsis>
                  </Portal>
                  <Portal
                    name="grouped-product.name.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <ProductPrice
                    price={
                      Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      }
                    }
                    renderLine={true}
                  >
                    <Portal
                      name="grouped-product.price.before"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                    <Portal
                      name="grouped-product.price"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    >
                      <div
                        className="css-1yymqrw"
                      >
                        <Price
                          className="css-fisw11"
                          currency="EUR"
                          discounted={false}
                          fractions={true}
                          taxDisclaimer={false}
                          unitPrice={5}
                          unitPriceMin={0}
                        >
                          <div
                            className="css-izofhs css-fisw11"
                            data-test-id="minPrice: 0 price: 5 currency: EUR"
                          >
                            <span
                              aria-label="price.label"
                              role="text"
                            >
                              <FormatPrice
                                currency="EUR"
                                fractions={true}
                                price={5}
                              >
                                p
                              </FormatPrice>
                            </span>
                          </div>
                        </Price>
                      </div>
                    </Portal>
                    <Portal
                      name="grouped-product.price.after"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                  </ProductPrice>
                  <Portal
                    name="grouped-product.availability.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.availability"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Availability
                      className="css-117ocmm"
                      showWhenAvailable={true}
                      state="ok"
                      text="Lorem Ipsum"
                    >
                      <div
                        className="css-117ocmm css-1ixzglu"
                        data-test-id="availabilityText: Lorem Ipsum"
                      >
                        Lorem Ipsum
                      </div>
                    </Availability>
                  </Portal>
                  <Portal
                    name="grouped-product.availability.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.meta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-1anng1p"
              component="li"
              grow={0}
              shrink={1}
            >
              <li
                className="css-1anng1p"
              >
                <Portal
                  name="grouped-product.cta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.cta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.add.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.add-to-cart"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <AddToCartPicker
                      buttonProps={
                        Object {
                          "isDisabled": false,
                          "isOrderable": true,
                          "noShadow": true,
                          "type": "grouped",
                        }
                      }
                      clickDelay={150}
                      conditioner={Object {}}
                      handleAddToCart={[Function]}
                      productId="1337"
                      stock={
                        Object {
                          "ignoreQuantity": false,
                          "info": "Info",
                          "maxOrderQuantity": 1000,
                          "minOrderQuantity": 1,
                          "orderable": true,
                          "quantity": 4,
                        }
                      }
                    >
                      <ForwardRef(WithForwardedRef(Picker))
                        buttonComponent={[Function]}
                        buttonProps={
                          Object {
                            "addedQuantity": 0,
                            "className": "css-l6qlih",
                            "conditioner": Object {},
                            "handleAddToCart": [Function],
                            "hasLoading": true,
                            "isDisabled": false,
                            "isLoading": false,
                            "isOrderable": true,
                            "noShadow": true,
                            "onClick": [Function],
                            "type": "grouped",
                          }
                        }
                        className="css-ibd9un"
                        items={
                          Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ]
                        }
                        listComponent={[Function]}
                        modalComponent={[Function]}
                        onSelect={[Function]}
                      >
                        <Picker
                          buttonComponent={[Function]}
                          buttonProps={
                            Object {
                              "addedQuantity": 0,
                              "className": "css-l6qlih",
                              "conditioner": Object {},
                              "handleAddToCart": [Function],
                              "hasLoading": true,
                              "isDisabled": false,
                              "isLoading": false,
                              "isOrderable": true,
                              "noShadow": true,
                              "onClick": [Function],
                              "type": "grouped",
                            }
                          }
                          className="css-ibd9un"
                          disabled={false}
                          duration={300}
                          forwardedRef={null}
                          isOpen={false}
                          items={
                            Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ]
                          }
                          label=""
                          listComponent={[Function]}
                          modalComponent={[Function]}
                          onChange={[Function]}
                          onClose={[Function]}
                          onSelect={[Function]}
                          placeholder="Pick ..."
                          value={null}
                        >
                          <div
                            aria-haspopup={true}
                            className="css-ibd9un"
                            role="button"
                            tabIndex={0}
                          >
                            <AddToCartButton
                              addedQuantity={0}
                              aria-hidden={false}
                              aria-label={null}
                              buttonSize={10}
                              className="css-l6qlih"
                              conditioner={Object {}}
                              disabled={false}
                              forwardedRef={null}
                              handleAddToCart={[Function]}
                              hasLoading={true}
                              iconSize={10}
                              isDisabled={false}
                              isLoading={false}
                              isOrderable={true}
                              label="Pick ..."
                              noShadow={true}
                              onClick={[Function]}
                              onReset={[Function]}
                              openList={[Function]}
                              type="grouped"
                              value=""
                            >
                              <button
                                aria-hidden={false}
                                aria-label={null}
                                className="css-l6qlih undefined undefined"
                                data-test-id="addToCartButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <div
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, 300%, 0)",
                                    }
                                  }
                                >
                                  <Tick>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </Tick>
                                </div>
                                <div
                                  onAnimationEnd={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, -50%, 0)",
                                    }
                                  }
                                >
                                  <CartPlus>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </CartPlus>
                                </div>
                              </button>
                            </AddToCartButton>
                            <Portal
                              isOpened={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              onUpdate={[Function]}
                            />
                          </div>
                        </Picker>
                      </ForwardRef(WithForwardedRef(Picker))>
                    </AddToCartPicker>
                  </Portal>
                  <Portal
                    name="grouped-product.add.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Connect(FavoritesButton)
                      active={true}
                      className="css-1dps91a"
                      noShadow={true}
                      productId="1337"
                      rippleClassName="css-1tdptiz"
                    >
                      <FavoritesButton
                        active={true}
                        addFavorites={[Function]}
                        aria-hidden={null}
                        className="css-1dps91a"
                        noShadow={true}
                        onRippleComplete={[Function]}
                        once={false}
                        productId="1337"
                        removeFavorites={[Function]}
                        removeThrottle={0}
                        removeWithRelatives={false}
                        rippleClassName="css-1tdptiz"
                      />
                    </Connect(FavoritesButton)>
                  </Portal>
                  <Portal
                    name="grouped-product.favorites.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.cta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
          </ul>
        </Grid>
      </Portal>
      <Portal
        name="grouped-product.after"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
    </Product>
  </Connect(Product)>
</Provider>
`;

exports[`<Product /> should render as expected with regular buttons 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Product)
    conditioner={Object {}}
    hasFavorites={true}
    product={
      Object {
        "availability": Object {
          "state": "ok",
          "text": "Lorem Ipsum",
        },
        "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
        "flags": Object {
          "hasChildren": true,
          "hasVariants": false,
        },
        "id": "1337",
        "name": "A shiny product",
        "price": Object {
          "currency": "EUR",
          "discount": 0,
          "info": "",
          "msrp": 0,
          "unitPrice": 5,
          "unitPriceMin": 0,
          "unitPriceStriked": 0,
        },
        "stock": Object {
          "ignoreQuantity": false,
          "info": "Info",
          "maxOrderQuantity": 1000,
          "minOrderQuantity": 1,
          "orderable": true,
          "quantity": 4,
        },
      }
    }
    renderFlatButtons={false}
  >
    <Product
      addToCartButtonProps={
        Object {
          "isDisabled": false,
          "isOrderable": true,
        }
      }
      conditioner={Object {}}
      handleAddToCart={[Function]}
      hasFavorites={true}
      isFavorite={true}
      product={
        Object {
          "availability": Object {
            "state": "ok",
            "text": "Lorem Ipsum",
          },
          "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
          "flags": Object {
            "hasChildren": true,
            "hasVariants": false,
          },
          "id": "1337",
          "name": "A shiny product",
          "price": Object {
            "currency": "EUR",
            "discount": 0,
            "info": "",
            "msrp": 0,
            "unitPrice": 5,
            "unitPriceMin": 0,
            "unitPriceStriked": 0,
          },
          "stock": Object {
            "ignoreQuantity": false,
            "info": "Info",
            "maxOrderQuantity": 1000,
            "minOrderQuantity": 1,
            "orderable": true,
            "quantity": 4,
          },
        }
      }
      renderFlatButtons={false}
    >
      <Portal
        name="grouped-product.before"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
      <Portal
        name="grouped-product"
        props={
          Object {
            "productId": "1337",
          }
        }
      >
        <Grid
          className=""
          component="ul"
          wrap={false}
        >
          <ul
            className=" css-h7r55a"
          >
            <GridItem
              className="css-sg184b"
              component="li"
              grow={0}
              shrink={0}
            >
              <li
                className="css-sg184b css-1l9a57c"
              >
                <Portal
                  name="grouped-product.image.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.image"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Image
                    alt="A shiny product"
                    animating={true}
                    backgroundColor="#f2f2f2"
                    className=""
                    forcePlaceholder={false}
                    highestResolutionLoaded={[Function]}
                    itemProp="image"
                    onError={null}
                    onLoad={null}
                    ratio={null}
                    resolutions={
                      Array [
                        Object {
                          "blur": 2,
                          "height": 50,
                          "width": 50,
                        },
                        Object {
                          "height": 440,
                          "width": 440,
                        },
                      ]
                    }
                    src="https://cdn.acme.com/kitten.jpg"
                    srcmap={null}
                    transition={null}
                  >
                    <div
                      className="css-vfdozt "
                    />
                  </Image>
                </Portal>
                <Portal
                  name="grouped-product.image.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-nil"
              component="li"
              grow={4}
              shrink={1}
            >
              <li
                className="css-nil css-ke56yp"
              >
                <Portal
                  name="grouped-product.meta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.meta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.name.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.name"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Ellipsis
                      className="css-ud99sa"
                      ellipsis="..."
                      rows={3}
                    >
                      <Dotdotdot
                        clamp={3}
                        className="css-ud99sa"
                        ellipsis="..."
                        tagName="div"
                        truncationChar="â€¦"
                        useNativeClamp={true}
                      >
                        <div
                          className="css-ud99sa"
                        >
                          A shiny product
                        </div>
                      </Dotdotdot>
                    </Ellipsis>
                  </Portal>
                  <Portal
                    name="grouped-product.name.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <ProductPrice
                    price={
                      Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      }
                    }
                    renderLine={true}
                  >
                    <Portal
                      name="grouped-product.price.before"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                    <Portal
                      name="grouped-product.price"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    >
                      <div
                        className="css-1yymqrw"
                      >
                        <Price
                          className="css-fisw11"
                          currency="EUR"
                          discounted={false}
                          fractions={true}
                          taxDisclaimer={false}
                          unitPrice={5}
                          unitPriceMin={0}
                        >
                          <div
                            className="css-izofhs css-fisw11"
                            data-test-id="minPrice: 0 price: 5 currency: EUR"
                          >
                            <span
                              aria-label="price.label"
                              role="text"
                            >
                              <FormatPrice
                                currency="EUR"
                                fractions={true}
                                price={5}
                              >
                                p
                              </FormatPrice>
                            </span>
                          </div>
                        </Price>
                      </div>
                    </Portal>
                    <Portal
                      name="grouped-product.price.after"
                      props={
                        Object {
                          "price": Object {
                            "currency": "EUR",
                            "discount": 0,
                            "info": "",
                            "msrp": 0,
                            "unitPrice": 5,
                            "unitPriceMin": 0,
                            "unitPriceStriked": 0,
                          },
                          "renderLine": true,
                        }
                      }
                    />
                  </ProductPrice>
                  <Portal
                    name="grouped-product.availability.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.availability"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Availability
                      className="css-117ocmm"
                      showWhenAvailable={true}
                      state="ok"
                      text="Lorem Ipsum"
                    >
                      <div
                        className="css-117ocmm css-1ixzglu"
                        data-test-id="availabilityText: Lorem Ipsum"
                      >
                        Lorem Ipsum
                      </div>
                    </Availability>
                  </Portal>
                  <Portal
                    name="grouped-product.availability.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.meta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
            <GridItem
              className="css-1anng1p"
              component="li"
              grow={0}
              shrink={1}
            >
              <li
                className="css-1anng1p"
              >
                <Portal
                  name="grouped-product.cta.before"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
                <Portal
                  name="grouped-product.cta"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                >
                  <Portal
                    name="grouped-product.add.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.add-to-cart"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <AddToCartPicker
                      buttonProps={
                        Object {
                          "isDisabled": false,
                          "isOrderable": true,
                          "noShadow": false,
                          "type": "grouped",
                        }
                      }
                      clickDelay={150}
                      conditioner={Object {}}
                      handleAddToCart={[Function]}
                      productId="1337"
                      stock={
                        Object {
                          "ignoreQuantity": false,
                          "info": "Info",
                          "maxOrderQuantity": 1000,
                          "minOrderQuantity": 1,
                          "orderable": true,
                          "quantity": 4,
                        }
                      }
                    >
                      <ForwardRef(WithForwardedRef(Picker))
                        buttonComponent={[Function]}
                        buttonProps={
                          Object {
                            "addedQuantity": 0,
                            "className": null,
                            "conditioner": Object {},
                            "handleAddToCart": [Function],
                            "hasLoading": true,
                            "isDisabled": false,
                            "isLoading": false,
                            "isOrderable": true,
                            "noShadow": false,
                            "onClick": [Function],
                            "type": "grouped",
                          }
                        }
                        className="css-ibd9un"
                        items={
                          Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ]
                        }
                        listComponent={[Function]}
                        modalComponent={[Function]}
                        onSelect={[Function]}
                      >
                        <Picker
                          buttonComponent={[Function]}
                          buttonProps={
                            Object {
                              "addedQuantity": 0,
                              "className": null,
                              "conditioner": Object {},
                              "handleAddToCart": [Function],
                              "hasLoading": true,
                              "isDisabled": false,
                              "isLoading": false,
                              "isOrderable": true,
                              "noShadow": false,
                              "onClick": [Function],
                              "type": "grouped",
                            }
                          }
                          className="css-ibd9un"
                          disabled={false}
                          duration={300}
                          forwardedRef={null}
                          isOpen={false}
                          items={
                            Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ]
                          }
                          label=""
                          listComponent={[Function]}
                          modalComponent={[Function]}
                          onChange={[Function]}
                          onClose={[Function]}
                          onSelect={[Function]}
                          placeholder="Pick ..."
                          value={null}
                        >
                          <div
                            aria-haspopup={true}
                            className="css-ibd9un"
                            role="button"
                            tabIndex={0}
                          >
                            <AddToCartButton
                              addedQuantity={0}
                              aria-hidden={false}
                              aria-label={null}
                              buttonSize={10}
                              className={null}
                              conditioner={Object {}}
                              disabled={false}
                              forwardedRef={null}
                              handleAddToCart={[Function]}
                              hasLoading={true}
                              iconSize={10}
                              isDisabled={false}
                              isLoading={false}
                              isOrderable={true}
                              label="Pick ..."
                              noShadow={false}
                              onClick={[Function]}
                              onReset={[Function]}
                              openList={[Function]}
                              type="grouped"
                              value=""
                            >
                              <button
                                aria-hidden={false}
                                aria-label={null}
                                className="null undefined undefined"
                                data-test-id="addToCartButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <div
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, 300%, 0)",
                                    }
                                  }
                                >
                                  <Tick>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </Tick>
                                </div>
                                <div
                                  onAnimationEnd={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "transform": "translate3d(0, -50%, 0)",
                                    }
                                  }
                                >
                                  <CartPlus>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </CartPlus>
                                </div>
                              </button>
                            </AddToCartButton>
                            <Portal
                              isOpened={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              onUpdate={[Function]}
                            />
                          </div>
                        </Picker>
                      </ForwardRef(WithForwardedRef(Picker))>
                    </AddToCartPicker>
                  </Portal>
                  <Portal
                    name="grouped-product.add.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites.before"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                  <Portal
                    name="grouped-product.favorites"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  >
                    <Connect(FavoritesButton)
                      active={true}
                      className="css-1dps91a"
                      noShadow={false}
                      productId="1337"
                      rippleClassName="css-1tdptiz"
                    >
                      <FavoritesButton
                        active={true}
                        addFavorites={[Function]}
                        aria-hidden={null}
                        className="css-1dps91a"
                        noShadow={false}
                        onRippleComplete={[Function]}
                        once={false}
                        productId="1337"
                        removeFavorites={[Function]}
                        removeThrottle={0}
                        removeWithRelatives={false}
                        rippleClassName="css-1tdptiz"
                      />
                    </Connect(FavoritesButton)>
                  </Portal>
                  <Portal
                    name="grouped-product.favorites.after"
                    props={
                      Object {
                        "productId": "1337",
                      }
                    }
                  />
                </Portal>
                <Portal
                  name="grouped-product.cta.after"
                  props={
                    Object {
                      "productId": "1337",
                    }
                  }
                />
              </li>
            </GridItem>
          </ul>
        </Grid>
      </Portal>
      <Portal
        name="grouped-product.after"
        props={
          Object {
            "productId": "1337",
          }
        }
      />
    </Product>
  </Connect(Product)>
</Provider>
`;
