// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GroupedProducts /> should not render when no grouped products are available 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(GroupedProducts)>
    <GroupedProducts
      dispatch={[Function]}
      products={Array []}
    />
  </Connect(GroupedProducts)>
</Provider>
`;

exports[`<GroupedProducts /> should render when grouped products are available 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(GroupedProducts)>
    <GroupedProducts
      dispatch={[Function]}
      products={
        Array [
          Object {
            "availability": Object {
              "state": "ok",
              "text": "Lorem Ipsum",
            },
            "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
            "flags": Object {
              "hasChildren": true,
              "hasVariants": false,
            },
            "id": "1337",
            "name": "A shiny product",
            "price": Object {
              "currency": "EUR",
              "discount": 0,
              "info": "",
              "msrp": 0,
              "unitPrice": 5,
              "unitPriceMin": 0,
              "unitPriceStriked": 0,
            },
            "stock": Object {
              "ignoreQuantity": false,
              "info": "Info",
              "maxOrderQuantity": 1000,
              "minOrderQuantity": 1,
              "orderable": true,
              "quantity": 4,
            },
          },
          Object {
            "availability": Object {
              "state": "ok",
              "text": "Lorem Ipsum",
            },
            "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
            "flags": Object {
              "hasChildren": true,
              "hasVariants": false,
            },
            "id": "4711",
            "name": "A discounted product with msrp",
            "price": Object {
              "currency": "EUR",
              "discount": 50,
              "info": "",
              "msrp": 10,
              "unitPrice": 5,
              "unitPriceMin": 0,
              "unitPriceStriked": 0,
            },
            "stock": Object {
              "ignoreQuantity": false,
              "info": "Info",
              "maxOrderQuantity": 1000,
              "minOrderQuantity": 1,
              "orderable": true,
              "quantity": 4,
            },
          },
          Object {
            "availability": Object {
              "state": "ok",
              "text": "Lorem Ipsum",
            },
            "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
            "flags": Object {
              "hasChildren": true,
              "hasVariants": false,
            },
            "id": "1985",
            "name": "A discounted product with stike price and info",
            "price": Object {
              "currency": "EUR",
              "discount": 50,
              "info": "5 EUR / kg",
              "msrp": 0,
              "unitPrice": 5,
              "unitPriceMin": 0,
              "unitPriceStriked": 10,
            },
            "stock": Object {
              "ignoreQuantity": false,
              "info": "Info",
              "maxOrderQuantity": 1000,
              "minOrderQuantity": 1,
              "orderable": true,
              "quantity": 4,
            },
          },
          Object {
            "availability": Object {
              "state": "ok",
              "text": "Lorem Ipsum",
            },
            "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
            "flags": Object {
              "hasChildren": true,
              "hasVariants": false,
            },
            "id": "foo",
            "name": "A not orderable product",
            "price": Object {
              "currency": "EUR",
              "discount": 0,
              "info": "",
              "msrp": 0,
              "unitPrice": 5,
              "unitPriceMin": 0,
              "unitPriceStriked": 0,
            },
            "stock": Object {
              "ignoreQuantity": false,
              "info": "Info",
              "maxOrderQuantity": 1000,
              "minOrderQuantity": 1,
              "orderable": false,
              "quantity": 0,
            },
          },
          Object {
            "availability": Object {
              "state": "ok",
              "text": "Lorem Ipsum",
            },
            "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
            "flags": Object {
              "hasChildren": true,
              "hasVariants": false,
            },
            "id": "1234",
            "name": "A product with ignored quantity",
            "price": Object {
              "currency": "EUR",
              "discount": 0,
              "info": "",
              "msrp": 0,
              "unitPrice": 5,
              "unitPriceMin": 0,
              "unitPriceStriked": 0,
            },
            "stock": Object {
              "ignoreQuantity": true,
              "info": "Info",
              "maxOrderQuantity": 1000,
              "minOrderQuantity": 1,
              "orderable": true,
              "quantity": 30,
            },
          },
        ]
      }
    >
      <List
        className="css-5bomak"
      >
        <ul
          className="css-gkw1j5 css-5bomak"
        >
          <ListItem
            className="css-hlnx4j"
            isSelected={false}
            key="1337"
          >
            <li
              className="css-1p5q8vq css-hlnx4j css-16gj3o1"
            >
              <Connect(Product)
                hasFavorites={false}
                product={
                  Object {
                    "availability": Object {
                      "state": "ok",
                      "text": "Lorem Ipsum",
                    },
                    "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                    "flags": Object {
                      "hasChildren": true,
                      "hasVariants": false,
                    },
                    "id": "1337",
                    "name": "A shiny product",
                    "price": Object {
                      "currency": "EUR",
                      "discount": 0,
                      "info": "",
                      "msrp": 0,
                      "unitPrice": 5,
                      "unitPriceMin": 0,
                      "unitPriceStriked": 0,
                    },
                    "stock": Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 4,
                    },
                  }
                }
                renderFlatButtons={false}
              >
                <Product
                  addToCartButtonProps={
                    Object {
                      "isDisabled": false,
                      "isOrderable": true,
                    }
                  }
                  handleAddToCart={[Function]}
                  hasFavorites={false}
                  isFavorite={true}
                  product={
                    Object {
                      "availability": Object {
                        "state": "ok",
                        "text": "Lorem Ipsum",
                      },
                      "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                      "flags": Object {
                        "hasChildren": true,
                        "hasVariants": false,
                      },
                      "id": "1337",
                      "name": "A shiny product",
                      "price": Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      },
                      "stock": Object {
                        "ignoreQuantity": false,
                        "info": "Info",
                        "maxOrderQuantity": 1000,
                        "minOrderQuantity": 1,
                        "orderable": true,
                        "quantity": 4,
                      },
                    }
                  }
                  renderFlatButtons={false}
                >
                  <Grid
                    className=""
                    component="ul"
                    wrap={false}
                  >
                    <ul
                      className=" css-h7r55a"
                    >
                      <GridItem
                        className="css-sg184b"
                        component="li"
                        grow={0}
                        shrink={0}
                      >
                        <li
                          className="css-sg184b css-1l9a57c"
                        >
                          <Image
                            alt="A shiny product"
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className=""
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            itemProp="image"
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="https://cdn.acme.com/kitten.jpg"
                            transition={null}
                          >
                            <div
                              className="css-326p2s "
                            />
                          </Image>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-nil"
                        component="li"
                        grow={4}
                        shrink={1}
                      >
                        <li
                          className="css-nil css-ke56yp"
                        >
                          <Ellipsis
                            className="css-ud99sa"
                            ellipsis="..."
                            rows={3}
                          >
                            <Dotdotdot
                              clamp={3}
                              className="css-ud99sa"
                              ellipsis="..."
                              tagName="div"
                              truncationChar="…"
                              useNativeClamp={true}
                            >
                              <div
                                className="css-ud99sa"
                              >
                                A shiny product
                              </div>
                            </Dotdotdot>
                          </Ellipsis>
                          <Availability
                            className="css-117ocmm"
                            showWhenAvailable={true}
                            state="ok"
                            text="Lorem Ipsum"
                          >
                            <div
                              className="css-117ocmm css-1ixzglu"
                              data-test-id="availabilityText: Lorem Ipsum"
                            >
                              Lorem Ipsum
                            </div>
                          </Availability>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-1onmrls"
                        component="li"
                        grow={0}
                        shrink={1}
                      >
                        <li
                          className="css-1onmrls"
                        >
                          <AddToCartPicker
                            buttonProps={
                              Object {
                                "isDisabled": false,
                                "isOrderable": true,
                                "noShadow": false,
                                "type": "grouped",
                              }
                            }
                            clickDelay={150}
                            handleAddToCart={[Function]}
                            productId="1337"
                            stock={
                              Object {
                                "ignoreQuantity": false,
                                "info": "Info",
                                "maxOrderQuantity": 1000,
                                "minOrderQuantity": 1,
                                "orderable": true,
                                "quantity": 4,
                              }
                            }
                          >
                            <Picker
                              buttonComponent={[Function]}
                              buttonProps={
                                Object {
                                  "addedQuantity": 0,
                                  "className": null,
                                  "handleAddToCart": [Function],
                                  "hasLoading": true,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isOrderable": true,
                                  "noShadow": false,
                                  "type": "grouped",
                                }
                              }
                              className="css-ibd9un"
                              disabled={false}
                              duration={300}
                              isOpen={false}
                              items={
                                Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ]
                              }
                              label=""
                              listComponent={[Function]}
                              modalComponent={[Function]}
                              onChange={[Function]}
                              onClose={[Function]}
                              placeholder="Pick ..."
                              value={null}
                            >
                              <div
                                className="css-ibd9un"
                              >
                                <PickerAddToCartButton
                                  addedQuantity={0}
                                  buttonSize={40}
                                  className={null}
                                  disabled={false}
                                  handleAddToCart={[Function]}
                                  hasLoading={true}
                                  iconSize={20}
                                  isDisabled={false}
                                  isLoading={false}
                                  isOrderable={true}
                                  label="Pick ..."
                                  noShadow={false}
                                  openList={[Function]}
                                  type="grouped"
                                  value=""
                                >
                                  <button
                                    className="null css-68omm3 css-31obrv"
                                    data-test-id="AddToCartButton"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-rukjns css-1gleer"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      <IndicatorCircle
                                        color="#5ccee3"
                                        paused={true}
                                        size={32}
                                        strokeWidth={5}
                                      >
                                        <svg
                                          className="css-17zev8s"
                                          height={32}
                                          viewBox="25 25 50 50"
                                          width={32}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <circle
                                            className="css-1n2s8pv"
                                            cx="50"
                                            cy="50"
                                            r="20"
                                          />
                                        </svg>
                                      </IndicatorCircle>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, 300%, 0)",
                                        }
                                      }
                                    >
                                      <Tick>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </Tick>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      onAnimationEnd={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, -50%, 0)",
                                        }
                                      }
                                    >
                                      <CartPlus>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </CartPlus>
                                    </div>
                                  </button>
                                </PickerAddToCartButton>
                                <Portal
                                  isOpened={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  onUpdate={[Function]}
                                />
                              </div>
                            </Picker>
                          </AddToCartPicker>
                          <ProductPrice
                            price={
                              Object {
                                "currency": "EUR",
                                "discount": 0,
                                "info": "",
                                "msrp": 0,
                                "unitPrice": 5,
                                "unitPriceMin": 0,
                                "unitPriceStriked": 0,
                              }
                            }
                            renderLine={false}
                          >
                            <div
                              className="css-nil"
                            >
                              <Price
                                className="css-fisw11"
                                currency="EUR"
                                discounted={false}
                                fractions={true}
                                taxDisclaimer={false}
                                unitPrice={5}
                                unitPriceMin={0}
                              >
                                <div
                                  className="css-izofhs css-fisw11"
                                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                                >
                                  <FormatPrice
                                    className=""
                                    currency="EUR"
                                    fractions={true}
                                    price={5}
                                  >
                                    <span
                                      className=""
                                    >
                                      p
                                    </span>
                                  </FormatPrice>
                                </div>
                              </Price>
                            </div>
                          </ProductPrice>
                        </li>
                      </GridItem>
                    </ul>
                  </Grid>
                </Product>
              </Connect(Product)>
            </li>
          </ListItem>
          <ListItem
            className="css-hlnx4j"
            isSelected={false}
            key="4711"
          >
            <li
              className="css-1p5q8vq css-hlnx4j css-16gj3o1"
            >
              <Connect(Product)
                hasFavorites={false}
                product={
                  Object {
                    "availability": Object {
                      "state": "ok",
                      "text": "Lorem Ipsum",
                    },
                    "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                    "flags": Object {
                      "hasChildren": true,
                      "hasVariants": false,
                    },
                    "id": "4711",
                    "name": "A discounted product with msrp",
                    "price": Object {
                      "currency": "EUR",
                      "discount": 50,
                      "info": "",
                      "msrp": 10,
                      "unitPrice": 5,
                      "unitPriceMin": 0,
                      "unitPriceStriked": 0,
                    },
                    "stock": Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 4,
                    },
                  }
                }
                renderFlatButtons={false}
              >
                <Product
                  addToCartButtonProps={
                    Object {
                      "isDisabled": false,
                      "isOrderable": true,
                    }
                  }
                  handleAddToCart={[Function]}
                  hasFavorites={false}
                  isFavorite={false}
                  product={
                    Object {
                      "availability": Object {
                        "state": "ok",
                        "text": "Lorem Ipsum",
                      },
                      "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                      "flags": Object {
                        "hasChildren": true,
                        "hasVariants": false,
                      },
                      "id": "4711",
                      "name": "A discounted product with msrp",
                      "price": Object {
                        "currency": "EUR",
                        "discount": 50,
                        "info": "",
                        "msrp": 10,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      },
                      "stock": Object {
                        "ignoreQuantity": false,
                        "info": "Info",
                        "maxOrderQuantity": 1000,
                        "minOrderQuantity": 1,
                        "orderable": true,
                        "quantity": 4,
                      },
                    }
                  }
                  renderFlatButtons={false}
                >
                  <Grid
                    className=""
                    component="ul"
                    wrap={false}
                  >
                    <ul
                      className=" css-h7r55a"
                    >
                      <GridItem
                        className="css-sg184b"
                        component="li"
                        grow={0}
                        shrink={0}
                      >
                        <li
                          className="css-sg184b css-1l9a57c"
                        >
                          <Image
                            alt="A discounted product with msrp"
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className=""
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            itemProp="image"
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="https://cdn.acme.com/kitten.jpg"
                            transition={null}
                          >
                            <div
                              className="css-326p2s "
                            />
                          </Image>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-nil"
                        component="li"
                        grow={4}
                        shrink={1}
                      >
                        <li
                          className="css-nil css-ke56yp"
                        >
                          <Ellipsis
                            className="css-ud99sa"
                            ellipsis="..."
                            rows={3}
                          >
                            <Dotdotdot
                              clamp={3}
                              className="css-ud99sa"
                              ellipsis="..."
                              tagName="div"
                              truncationChar="…"
                              useNativeClamp={true}
                            >
                              <div
                                className="css-ud99sa"
                              >
                                A discounted product with msrp
                              </div>
                            </Dotdotdot>
                          </Ellipsis>
                          <Availability
                            className="css-117ocmm"
                            showWhenAvailable={true}
                            state="ok"
                            text="Lorem Ipsum"
                          >
                            <div
                              className="css-117ocmm css-1ixzglu"
                              data-test-id="availabilityText: Lorem Ipsum"
                            >
                              Lorem Ipsum
                            </div>
                          </Availability>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-1onmrls"
                        component="li"
                        grow={0}
                        shrink={1}
                      >
                        <li
                          className="css-1onmrls"
                        >
                          <AddToCartPicker
                            buttonProps={
                              Object {
                                "isDisabled": false,
                                "isOrderable": true,
                                "noShadow": false,
                                "type": "grouped",
                              }
                            }
                            clickDelay={150}
                            handleAddToCart={[Function]}
                            productId="4711"
                            stock={
                              Object {
                                "ignoreQuantity": false,
                                "info": "Info",
                                "maxOrderQuantity": 1000,
                                "minOrderQuantity": 1,
                                "orderable": true,
                                "quantity": 4,
                              }
                            }
                          >
                            <Picker
                              buttonComponent={[Function]}
                              buttonProps={
                                Object {
                                  "addedQuantity": 0,
                                  "className": null,
                                  "handleAddToCart": [Function],
                                  "hasLoading": true,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isOrderable": true,
                                  "noShadow": false,
                                  "type": "grouped",
                                }
                              }
                              className="css-ibd9un"
                              disabled={false}
                              duration={300}
                              isOpen={false}
                              items={
                                Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ]
                              }
                              label=""
                              listComponent={[Function]}
                              modalComponent={[Function]}
                              onChange={[Function]}
                              onClose={[Function]}
                              placeholder="Pick ..."
                              value={null}
                            >
                              <div
                                className="css-ibd9un"
                              >
                                <PickerAddToCartButton
                                  addedQuantity={0}
                                  buttonSize={40}
                                  className={null}
                                  disabled={false}
                                  handleAddToCart={[Function]}
                                  hasLoading={true}
                                  iconSize={20}
                                  isDisabled={false}
                                  isLoading={false}
                                  isOrderable={true}
                                  label="Pick ..."
                                  noShadow={false}
                                  openList={[Function]}
                                  type="grouped"
                                  value=""
                                >
                                  <button
                                    className="null css-68omm3 css-31obrv"
                                    data-test-id="AddToCartButton"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-rukjns css-1gleer"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      <IndicatorCircle
                                        color="#5ccee3"
                                        paused={true}
                                        size={32}
                                        strokeWidth={5}
                                      >
                                        <svg
                                          className="css-17zev8s"
                                          height={32}
                                          viewBox="25 25 50 50"
                                          width={32}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <circle
                                            className="css-1n2s8pv"
                                            cx="50"
                                            cy="50"
                                            r="20"
                                          />
                                        </svg>
                                      </IndicatorCircle>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, 300%, 0)",
                                        }
                                      }
                                    >
                                      <Tick>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </Tick>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      onAnimationEnd={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, -50%, 0)",
                                        }
                                      }
                                    >
                                      <CartPlus>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </CartPlus>
                                    </div>
                                  </button>
                                </PickerAddToCartButton>
                                <Portal
                                  isOpened={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  onUpdate={[Function]}
                                />
                              </div>
                            </Picker>
                          </AddToCartPicker>
                          <ProductPrice
                            price={
                              Object {
                                "currency": "EUR",
                                "discount": 50,
                                "info": "",
                                "msrp": 10,
                                "unitPrice": 5,
                                "unitPriceMin": 0,
                                "unitPriceStriked": 0,
                              }
                            }
                            renderLine={false}
                          >
                            <div
                              className="css-nil"
                            >
                              <div
                                className="css-h0biv2"
                              >
                                <Translate
                                  className="css-14aq3ya"
                                  params={Object {}}
                                  string="price.msrp"
                                >
                                  <span
                                    className="css-14aq3ya"
                                  >
                                    price.msrp
                                  </span>
                                </Translate>
                                <PriceStriked
                                  className="css-117ocmm"
                                  currency="EUR"
                                  value={10}
                                >
                                  <div
                                    className="css-1sagvrb css-117ocmm "
                                  >
                                    <span
                                      data-test-id="strikedPrice: 10"
                                    >
                                      <FormatPrice
                                        className=""
                                        currency="EUR"
                                        fractions={true}
                                        price={10}
                                      >
                                        <span
                                          className=""
                                        >
                                          p
                                        </span>
                                      </FormatPrice>
                                    </span>
                                  </div>
                                </PriceStriked>
                              </div>
                              <Price
                                className="css-fisw11"
                                currency="EUR"
                                discounted={true}
                                fractions={true}
                                taxDisclaimer={false}
                                unitPrice={5}
                                unitPriceMin={0}
                              >
                                <div
                                  className="css-izofhs css-fisw11 css-1ncyhu"
                                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                                >
                                  <FormatPrice
                                    className=""
                                    currency="EUR"
                                    fractions={true}
                                    price={5}
                                  >
                                    <span
                                      className=""
                                    >
                                      p
                                    </span>
                                  </FormatPrice>
                                </div>
                              </Price>
                            </div>
                          </ProductPrice>
                        </li>
                      </GridItem>
                    </ul>
                  </Grid>
                </Product>
              </Connect(Product)>
            </li>
          </ListItem>
          <ListItem
            className="css-hlnx4j"
            isSelected={false}
            key="1985"
          >
            <li
              className="css-1p5q8vq css-hlnx4j css-16gj3o1"
            >
              <Connect(Product)
                hasFavorites={false}
                product={
                  Object {
                    "availability": Object {
                      "state": "ok",
                      "text": "Lorem Ipsum",
                    },
                    "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                    "flags": Object {
                      "hasChildren": true,
                      "hasVariants": false,
                    },
                    "id": "1985",
                    "name": "A discounted product with stike price and info",
                    "price": Object {
                      "currency": "EUR",
                      "discount": 50,
                      "info": "5 EUR / kg",
                      "msrp": 0,
                      "unitPrice": 5,
                      "unitPriceMin": 0,
                      "unitPriceStriked": 10,
                    },
                    "stock": Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 4,
                    },
                  }
                }
                renderFlatButtons={false}
              >
                <Product
                  addToCartButtonProps={
                    Object {
                      "isDisabled": false,
                      "isOrderable": true,
                    }
                  }
                  handleAddToCart={[Function]}
                  hasFavorites={false}
                  isFavorite={false}
                  product={
                    Object {
                      "availability": Object {
                        "state": "ok",
                        "text": "Lorem Ipsum",
                      },
                      "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                      "flags": Object {
                        "hasChildren": true,
                        "hasVariants": false,
                      },
                      "id": "1985",
                      "name": "A discounted product with stike price and info",
                      "price": Object {
                        "currency": "EUR",
                        "discount": 50,
                        "info": "5 EUR / kg",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 10,
                      },
                      "stock": Object {
                        "ignoreQuantity": false,
                        "info": "Info",
                        "maxOrderQuantity": 1000,
                        "minOrderQuantity": 1,
                        "orderable": true,
                        "quantity": 4,
                      },
                    }
                  }
                  renderFlatButtons={false}
                >
                  <Grid
                    className=""
                    component="ul"
                    wrap={false}
                  >
                    <ul
                      className=" css-h7r55a"
                    >
                      <GridItem
                        className="css-sg184b"
                        component="li"
                        grow={0}
                        shrink={0}
                      >
                        <li
                          className="css-sg184b css-1l9a57c"
                        >
                          <Image
                            alt="A discounted product with stike price and info"
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className=""
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            itemProp="image"
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="https://cdn.acme.com/kitten.jpg"
                            transition={null}
                          >
                            <div
                              className="css-326p2s "
                            />
                          </Image>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-nil"
                        component="li"
                        grow={4}
                        shrink={1}
                      >
                        <li
                          className="css-nil css-ke56yp"
                        >
                          <Ellipsis
                            className="css-ud99sa"
                            ellipsis="..."
                            rows={3}
                          >
                            <Dotdotdot
                              clamp={3}
                              className="css-ud99sa"
                              ellipsis="..."
                              tagName="div"
                              truncationChar="…"
                              useNativeClamp={true}
                            >
                              <div
                                className="css-ud99sa"
                              >
                                A discounted product with stike price and info
                              </div>
                            </Dotdotdot>
                          </Ellipsis>
                          <Availability
                            className="css-117ocmm"
                            showWhenAvailable={true}
                            state="ok"
                            text="Lorem Ipsum"
                          >
                            <div
                              className="css-117ocmm css-1ixzglu"
                              data-test-id="availabilityText: Lorem Ipsum"
                            >
                              Lorem Ipsum
                            </div>
                          </Availability>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-1onmrls"
                        component="li"
                        grow={0}
                        shrink={1}
                      >
                        <li
                          className="css-1onmrls"
                        >
                          <AddToCartPicker
                            buttonProps={
                              Object {
                                "isDisabled": false,
                                "isOrderable": true,
                                "noShadow": false,
                                "type": "grouped",
                              }
                            }
                            clickDelay={150}
                            handleAddToCart={[Function]}
                            productId="1985"
                            stock={
                              Object {
                                "ignoreQuantity": false,
                                "info": "Info",
                                "maxOrderQuantity": 1000,
                                "minOrderQuantity": 1,
                                "orderable": true,
                                "quantity": 4,
                              }
                            }
                          >
                            <Picker
                              buttonComponent={[Function]}
                              buttonProps={
                                Object {
                                  "addedQuantity": 0,
                                  "className": null,
                                  "handleAddToCart": [Function],
                                  "hasLoading": true,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isOrderable": true,
                                  "noShadow": false,
                                  "type": "grouped",
                                }
                              }
                              className="css-ibd9un"
                              disabled={false}
                              duration={300}
                              isOpen={false}
                              items={
                                Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ]
                              }
                              label=""
                              listComponent={[Function]}
                              modalComponent={[Function]}
                              onChange={[Function]}
                              onClose={[Function]}
                              placeholder="Pick ..."
                              value={null}
                            >
                              <div
                                className="css-ibd9un"
                              >
                                <PickerAddToCartButton
                                  addedQuantity={0}
                                  buttonSize={40}
                                  className={null}
                                  disabled={false}
                                  handleAddToCart={[Function]}
                                  hasLoading={true}
                                  iconSize={20}
                                  isDisabled={false}
                                  isLoading={false}
                                  isOrderable={true}
                                  label="Pick ..."
                                  noShadow={false}
                                  openList={[Function]}
                                  type="grouped"
                                  value=""
                                >
                                  <button
                                    className="null css-68omm3 css-31obrv"
                                    data-test-id="AddToCartButton"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-rukjns css-1gleer"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      <IndicatorCircle
                                        color="#5ccee3"
                                        paused={true}
                                        size={32}
                                        strokeWidth={5}
                                      >
                                        <svg
                                          className="css-17zev8s"
                                          height={32}
                                          viewBox="25 25 50 50"
                                          width={32}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <circle
                                            className="css-1n2s8pv"
                                            cx="50"
                                            cy="50"
                                            r="20"
                                          />
                                        </svg>
                                      </IndicatorCircle>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, 300%, 0)",
                                        }
                                      }
                                    >
                                      <Tick>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </Tick>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      onAnimationEnd={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, -50%, 0)",
                                        }
                                      }
                                    >
                                      <CartPlus>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </CartPlus>
                                    </div>
                                  </button>
                                </PickerAddToCartButton>
                                <Portal
                                  isOpened={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  onUpdate={[Function]}
                                />
                              </div>
                            </Picker>
                          </AddToCartPicker>
                          <ProductPrice
                            price={
                              Object {
                                "currency": "EUR",
                                "discount": 50,
                                "info": "5 EUR / kg",
                                "msrp": 0,
                                "unitPrice": 5,
                                "unitPriceMin": 0,
                                "unitPriceStriked": 10,
                              }
                            }
                            renderLine={false}
                          >
                            <div
                              className="css-nil"
                            >
                              <PriceStriked
                                className="css-117ocmm"
                                currency="EUR"
                                value={10}
                              >
                                <div
                                  className="css-1sagvrb css-117ocmm "
                                >
                                  <span
                                    data-test-id="strikedPrice: 10"
                                  >
                                    <FormatPrice
                                      className=""
                                      currency="EUR"
                                      fractions={true}
                                      price={10}
                                    >
                                      <span
                                        className=""
                                      >
                                        p
                                      </span>
                                    </FormatPrice>
                                  </span>
                                </div>
                              </PriceStriked>
                              <Price
                                className="css-fisw11"
                                currency="EUR"
                                discounted={true}
                                fractions={true}
                                taxDisclaimer={false}
                                unitPrice={5}
                                unitPriceMin={0}
                              >
                                <div
                                  className="css-izofhs css-fisw11 css-1ncyhu"
                                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                                >
                                  <FormatPrice
                                    className=""
                                    currency="EUR"
                                    fractions={true}
                                    price={5}
                                  >
                                    <span
                                      className=""
                                    >
                                      p
                                    </span>
                                  </FormatPrice>
                                </div>
                              </Price>
                            </div>
                            <PriceInfo
                              className="css-7hzrhp"
                              text="5 EUR / kg"
                            >
                              <div
                                className="css-1kqiarg css-7hzrhp"
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "5 EUR / kg",
                                  }
                                }
                                data-test-id="priceInfo: 5 EUR / kg"
                              />
                            </PriceInfo>
                          </ProductPrice>
                        </li>
                      </GridItem>
                    </ul>
                  </Grid>
                </Product>
              </Connect(Product)>
            </li>
          </ListItem>
          <ListItem
            className="css-hlnx4j"
            isSelected={false}
            key="foo"
          >
            <li
              className="css-1p5q8vq css-hlnx4j css-16gj3o1"
            >
              <Connect(Product)
                hasFavorites={false}
                product={
                  Object {
                    "availability": Object {
                      "state": "ok",
                      "text": "Lorem Ipsum",
                    },
                    "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                    "flags": Object {
                      "hasChildren": true,
                      "hasVariants": false,
                    },
                    "id": "foo",
                    "name": "A not orderable product",
                    "price": Object {
                      "currency": "EUR",
                      "discount": 0,
                      "info": "",
                      "msrp": 0,
                      "unitPrice": 5,
                      "unitPriceMin": 0,
                      "unitPriceStriked": 0,
                    },
                    "stock": Object {
                      "ignoreQuantity": false,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": false,
                      "quantity": 0,
                    },
                  }
                }
                renderFlatButtons={false}
              >
                <Product
                  addToCartButtonProps={
                    Object {
                      "isDisabled": true,
                      "isOrderable": false,
                    }
                  }
                  handleAddToCart={[Function]}
                  hasFavorites={false}
                  isFavorite={false}
                  product={
                    Object {
                      "availability": Object {
                        "state": "ok",
                        "text": "Lorem Ipsum",
                      },
                      "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                      "flags": Object {
                        "hasChildren": true,
                        "hasVariants": false,
                      },
                      "id": "foo",
                      "name": "A not orderable product",
                      "price": Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      },
                      "stock": Object {
                        "ignoreQuantity": false,
                        "info": "Info",
                        "maxOrderQuantity": 1000,
                        "minOrderQuantity": 1,
                        "orderable": false,
                        "quantity": 0,
                      },
                    }
                  }
                  renderFlatButtons={false}
                >
                  <Grid
                    className=""
                    component="ul"
                    wrap={false}
                  >
                    <ul
                      className=" css-h7r55a"
                    >
                      <GridItem
                        className="css-sg184b"
                        component="li"
                        grow={0}
                        shrink={0}
                      >
                        <li
                          className="css-sg184b css-1l9a57c"
                        >
                          <Image
                            alt="A not orderable product"
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className=""
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            itemProp="image"
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="https://cdn.acme.com/kitten.jpg"
                            transition={null}
                          >
                            <div
                              className="css-326p2s "
                            />
                          </Image>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-nil"
                        component="li"
                        grow={4}
                        shrink={1}
                      >
                        <li
                          className="css-nil css-ke56yp"
                        >
                          <Ellipsis
                            className="css-ud99sa"
                            ellipsis="..."
                            rows={3}
                          >
                            <Dotdotdot
                              clamp={3}
                              className="css-ud99sa"
                              ellipsis="..."
                              tagName="div"
                              truncationChar="…"
                              useNativeClamp={true}
                            >
                              <div
                                className="css-ud99sa"
                              >
                                A not orderable product
                              </div>
                            </Dotdotdot>
                          </Ellipsis>
                          <Availability
                            className="css-117ocmm"
                            showWhenAvailable={true}
                            state="ok"
                            text="Lorem Ipsum"
                          >
                            <div
                              className="css-117ocmm css-1ixzglu"
                              data-test-id="availabilityText: Lorem Ipsum"
                            >
                              Lorem Ipsum
                            </div>
                          </Availability>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-1onmrls"
                        component="li"
                        grow={0}
                        shrink={1}
                      >
                        <li
                          className="css-1onmrls"
                        >
                          <AddToCartPicker
                            buttonProps={
                              Object {
                                "isDisabled": true,
                                "isOrderable": false,
                                "noShadow": false,
                                "type": "grouped",
                              }
                            }
                            clickDelay={150}
                            handleAddToCart={[Function]}
                            productId="foo"
                            stock={
                              Object {
                                "ignoreQuantity": false,
                                "info": "Info",
                                "maxOrderQuantity": 1000,
                                "minOrderQuantity": 1,
                                "orderable": false,
                                "quantity": 0,
                              }
                            }
                          >
                            <Picker
                              buttonComponent={[Function]}
                              buttonProps={
                                Object {
                                  "addedQuantity": 0,
                                  "className": null,
                                  "handleAddToCart": [Function],
                                  "hasLoading": true,
                                  "isDisabled": true,
                                  "isLoading": false,
                                  "isOrderable": false,
                                  "noShadow": false,
                                  "type": "grouped",
                                }
                              }
                              className="css-ibd9un"
                              disabled={false}
                              duration={300}
                              isOpen={false}
                              items={Array []}
                              label=""
                              listComponent={[Function]}
                              modalComponent={[Function]}
                              onChange={[Function]}
                              onClose={[Function]}
                              placeholder="Pick ..."
                              value={null}
                            >
                              <div
                                className="css-ibd9un"
                              >
                                <PickerAddToCartButton
                                  addedQuantity={0}
                                  buttonSize={40}
                                  className={null}
                                  disabled={false}
                                  handleAddToCart={[Function]}
                                  hasLoading={true}
                                  iconSize={20}
                                  isDisabled={true}
                                  isLoading={false}
                                  isOrderable={false}
                                  label="Pick ..."
                                  noShadow={false}
                                  openList={[Function]}
                                  type="grouped"
                                  value=""
                                >
                                  <button
                                    className="null css-68omm3 css-15s4nvk"
                                    data-test-id="AddToCartButton"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-rukjns css-1gleer"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      <IndicatorCircle
                                        color="#5ccee3"
                                        paused={true}
                                        size={32}
                                        strokeWidth={5}
                                      >
                                        <svg
                                          className="css-17zev8s"
                                          height={32}
                                          viewBox="25 25 50 50"
                                          width={32}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <circle
                                            className="css-1n2s8pv"
                                            cx="50"
                                            cy="50"
                                            r="20"
                                          />
                                        </svg>
                                      </IndicatorCircle>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, 300%, 0)",
                                        }
                                      }
                                    >
                                      <Tick>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </Tick>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      onAnimationEnd={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, -50%, 0)",
                                        }
                                      }
                                    >
                                      <CartPlus>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </CartPlus>
                                    </div>
                                  </button>
                                </PickerAddToCartButton>
                                <Portal
                                  isOpened={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  onUpdate={[Function]}
                                />
                              </div>
                            </Picker>
                          </AddToCartPicker>
                          <ProductPrice
                            price={
                              Object {
                                "currency": "EUR",
                                "discount": 0,
                                "info": "",
                                "msrp": 0,
                                "unitPrice": 5,
                                "unitPriceMin": 0,
                                "unitPriceStriked": 0,
                              }
                            }
                            renderLine={false}
                          >
                            <div
                              className="css-nil"
                            >
                              <Price
                                className="css-fisw11"
                                currency="EUR"
                                discounted={false}
                                fractions={true}
                                taxDisclaimer={false}
                                unitPrice={5}
                                unitPriceMin={0}
                              >
                                <div
                                  className="css-izofhs css-fisw11"
                                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                                >
                                  <FormatPrice
                                    className=""
                                    currency="EUR"
                                    fractions={true}
                                    price={5}
                                  >
                                    <span
                                      className=""
                                    >
                                      p
                                    </span>
                                  </FormatPrice>
                                </div>
                              </Price>
                            </div>
                          </ProductPrice>
                        </li>
                      </GridItem>
                    </ul>
                  </Grid>
                </Product>
              </Connect(Product)>
            </li>
          </ListItem>
          <ListItem
            className="css-hlnx4j"
            isSelected={false}
            key="1234"
          >
            <li
              className="css-1p5q8vq css-hlnx4j css-16gj3o1"
            >
              <Connect(Product)
                hasFavorites={false}
                product={
                  Object {
                    "availability": Object {
                      "state": "ok",
                      "text": "Lorem Ipsum",
                    },
                    "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                    "flags": Object {
                      "hasChildren": true,
                      "hasVariants": false,
                    },
                    "id": "1234",
                    "name": "A product with ignored quantity",
                    "price": Object {
                      "currency": "EUR",
                      "discount": 0,
                      "info": "",
                      "msrp": 0,
                      "unitPrice": 5,
                      "unitPriceMin": 0,
                      "unitPriceStriked": 0,
                    },
                    "stock": Object {
                      "ignoreQuantity": true,
                      "info": "Info",
                      "maxOrderQuantity": 1000,
                      "minOrderQuantity": 1,
                      "orderable": true,
                      "quantity": 30,
                    },
                  }
                }
                renderFlatButtons={false}
              >
                <Product
                  addToCartButtonProps={
                    Object {
                      "isDisabled": false,
                      "isOrderable": true,
                    }
                  }
                  handleAddToCart={[Function]}
                  hasFavorites={false}
                  isFavorite={false}
                  product={
                    Object {
                      "availability": Object {
                        "state": "ok",
                        "text": "Lorem Ipsum",
                      },
                      "featuredImageUrl": "https://cdn.acme.com/kitten.jpg",
                      "flags": Object {
                        "hasChildren": true,
                        "hasVariants": false,
                      },
                      "id": "1234",
                      "name": "A product with ignored quantity",
                      "price": Object {
                        "currency": "EUR",
                        "discount": 0,
                        "info": "",
                        "msrp": 0,
                        "unitPrice": 5,
                        "unitPriceMin": 0,
                        "unitPriceStriked": 0,
                      },
                      "stock": Object {
                        "ignoreQuantity": true,
                        "info": "Info",
                        "maxOrderQuantity": 1000,
                        "minOrderQuantity": 1,
                        "orderable": true,
                        "quantity": 30,
                      },
                    }
                  }
                  renderFlatButtons={false}
                >
                  <Grid
                    className=""
                    component="ul"
                    wrap={false}
                  >
                    <ul
                      className=" css-h7r55a"
                    >
                      <GridItem
                        className="css-sg184b"
                        component="li"
                        grow={0}
                        shrink={0}
                      >
                        <li
                          className="css-sg184b css-1l9a57c"
                        >
                          <Image
                            alt="A product with ignored quantity"
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className=""
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            itemProp="image"
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="https://cdn.acme.com/kitten.jpg"
                            transition={null}
                          >
                            <div
                              className="css-326p2s "
                            />
                          </Image>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-nil"
                        component="li"
                        grow={4}
                        shrink={1}
                      >
                        <li
                          className="css-nil css-ke56yp"
                        >
                          <Ellipsis
                            className="css-ud99sa"
                            ellipsis="..."
                            rows={3}
                          >
                            <Dotdotdot
                              clamp={3}
                              className="css-ud99sa"
                              ellipsis="..."
                              tagName="div"
                              truncationChar="…"
                              useNativeClamp={true}
                            >
                              <div
                                className="css-ud99sa"
                              >
                                A product with ignored quantity
                              </div>
                            </Dotdotdot>
                          </Ellipsis>
                          <Availability
                            className="css-117ocmm"
                            showWhenAvailable={true}
                            state="ok"
                            text="Lorem Ipsum"
                          >
                            <div
                              className="css-117ocmm css-1ixzglu"
                              data-test-id="availabilityText: Lorem Ipsum"
                            >
                              Lorem Ipsum
                            </div>
                          </Availability>
                        </li>
                      </GridItem>
                      <GridItem
                        className="css-1onmrls"
                        component="li"
                        grow={0}
                        shrink={1}
                      >
                        <li
                          className="css-1onmrls"
                        >
                          <AddToCartPicker
                            buttonProps={
                              Object {
                                "isDisabled": false,
                                "isOrderable": true,
                                "noShadow": false,
                                "type": "grouped",
                              }
                            }
                            clickDelay={150}
                            handleAddToCart={[Function]}
                            productId="1234"
                            stock={
                              Object {
                                "ignoreQuantity": true,
                                "info": "Info",
                                "maxOrderQuantity": 1000,
                                "minOrderQuantity": 1,
                                "orderable": true,
                                "quantity": 30,
                              }
                            }
                          >
                            <Picker
                              buttonComponent={[Function]}
                              buttonProps={
                                Object {
                                  "addedQuantity": 0,
                                  "className": null,
                                  "handleAddToCart": [Function],
                                  "hasLoading": true,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isOrderable": true,
                                  "noShadow": false,
                                  "type": "grouped",
                                }
                              }
                              className="css-ibd9un"
                              disabled={false}
                              duration={300}
                              isOpen={false}
                              items={
                                Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                  Object {
                                    "label": "5",
                                    "value": 5,
                                  },
                                  Object {
                                    "label": "6",
                                    "value": 6,
                                  },
                                  Object {
                                    "label": "7",
                                    "value": 7,
                                  },
                                  Object {
                                    "label": "8",
                                    "value": 8,
                                  },
                                  Object {
                                    "label": "9",
                                    "value": 9,
                                  },
                                  Object {
                                    "label": "10",
                                    "value": 10,
                                  },
                                  Object {
                                    "label": "11",
                                    "value": 11,
                                  },
                                  Object {
                                    "label": "12",
                                    "value": 12,
                                  },
                                  Object {
                                    "label": "13",
                                    "value": 13,
                                  },
                                  Object {
                                    "label": "14",
                                    "value": 14,
                                  },
                                  Object {
                                    "label": "15",
                                    "value": 15,
                                  },
                                  Object {
                                    "label": "16",
                                    "value": 16,
                                  },
                                  Object {
                                    "label": "17",
                                    "value": 17,
                                  },
                                  Object {
                                    "label": "18",
                                    "value": 18,
                                  },
                                  Object {
                                    "label": "19",
                                    "value": 19,
                                  },
                                  Object {
                                    "label": "20",
                                    "value": 20,
                                  },
                                  Object {
                                    "label": "21",
                                    "value": 21,
                                  },
                                  Object {
                                    "label": "22",
                                    "value": 22,
                                  },
                                  Object {
                                    "label": "23",
                                    "value": 23,
                                  },
                                  Object {
                                    "label": "24",
                                    "value": 24,
                                  },
                                  Object {
                                    "label": "25",
                                    "value": 25,
                                  },
                                  Object {
                                    "label": "26",
                                    "value": 26,
                                  },
                                  Object {
                                    "label": "27",
                                    "value": 27,
                                  },
                                  Object {
                                    "label": "28",
                                    "value": 28,
                                  },
                                  Object {
                                    "label": "29",
                                    "value": 29,
                                  },
                                  Object {
                                    "label": "30",
                                    "value": 30,
                                  },
                                  Object {
                                    "label": "31",
                                    "value": 31,
                                  },
                                  Object {
                                    "label": "32",
                                    "value": 32,
                                  },
                                  Object {
                                    "label": "33",
                                    "value": 33,
                                  },
                                  Object {
                                    "label": "34",
                                    "value": 34,
                                  },
                                  Object {
                                    "label": "35",
                                    "value": 35,
                                  },
                                  Object {
                                    "label": "36",
                                    "value": 36,
                                  },
                                  Object {
                                    "label": "37",
                                    "value": 37,
                                  },
                                  Object {
                                    "label": "38",
                                    "value": 38,
                                  },
                                  Object {
                                    "label": "39",
                                    "value": 39,
                                  },
                                  Object {
                                    "label": "40",
                                    "value": 40,
                                  },
                                  Object {
                                    "label": "41",
                                    "value": 41,
                                  },
                                  Object {
                                    "label": "42",
                                    "value": 42,
                                  },
                                  Object {
                                    "label": "43",
                                    "value": 43,
                                  },
                                  Object {
                                    "label": "44",
                                    "value": 44,
                                  },
                                  Object {
                                    "label": "45",
                                    "value": 45,
                                  },
                                  Object {
                                    "label": "46",
                                    "value": 46,
                                  },
                                  Object {
                                    "label": "47",
                                    "value": 47,
                                  },
                                  Object {
                                    "label": "48",
                                    "value": 48,
                                  },
                                  Object {
                                    "label": "49",
                                    "value": 49,
                                  },
                                  Object {
                                    "label": "50",
                                    "value": 50,
                                  },
                                ]
                              }
                              label=""
                              listComponent={[Function]}
                              modalComponent={[Function]}
                              onChange={[Function]}
                              onClose={[Function]}
                              placeholder="Pick ..."
                              value={null}
                            >
                              <div
                                className="css-ibd9un"
                              >
                                <PickerAddToCartButton
                                  addedQuantity={0}
                                  buttonSize={40}
                                  className={null}
                                  disabled={false}
                                  handleAddToCart={[Function]}
                                  hasLoading={true}
                                  iconSize={20}
                                  isDisabled={false}
                                  isLoading={false}
                                  isOrderable={true}
                                  label="Pick ..."
                                  noShadow={false}
                                  openList={[Function]}
                                  type="grouped"
                                  value=""
                                >
                                  <button
                                    className="null css-68omm3 css-31obrv"
                                    data-test-id="AddToCartButton"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-rukjns css-1gleer"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      <IndicatorCircle
                                        color="#5ccee3"
                                        paused={true}
                                        size={32}
                                        strokeWidth={5}
                                      >
                                        <svg
                                          className="css-17zev8s"
                                          height={32}
                                          viewBox="25 25 50 50"
                                          width={32}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <circle
                                            className="css-1n2s8pv"
                                            cx="50"
                                            cy="50"
                                            r="20"
                                          />
                                        </svg>
                                      </IndicatorCircle>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, 300%, 0)",
                                        }
                                      }
                                    >
                                      <Tick>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </Tick>
                                    </div>
                                    <div
                                      className="css-rukjns"
                                      onAnimationEnd={[Function]}
                                      style={
                                        Object {
                                          "opacity": 1,
                                          "transform": "translate3d(0, -50%, 0)",
                                        }
                                      }
                                    >
                                      <CartPlus>
                                        <Icon
                                          className=""
                                          color={null}
                                          content="<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>"
                                          size="inherit"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            className="css-yys9hb "
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "<path d=\\"M0 0h24v24H0zm18.31 6l-2.76 5z\\" fill=\\"none\\"/><path d=\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\"/>",
                                              }
                                            }
                                            style={
                                              Object {
                                                "fill": null,
                                                "fontSize": "inherit",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          />
                                        </Icon>
                                      </CartPlus>
                                    </div>
                                  </button>
                                </PickerAddToCartButton>
                                <Portal
                                  isOpened={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  onUpdate={[Function]}
                                />
                              </div>
                            </Picker>
                          </AddToCartPicker>
                          <ProductPrice
                            price={
                              Object {
                                "currency": "EUR",
                                "discount": 0,
                                "info": "",
                                "msrp": 0,
                                "unitPrice": 5,
                                "unitPriceMin": 0,
                                "unitPriceStriked": 0,
                              }
                            }
                            renderLine={false}
                          >
                            <div
                              className="css-nil"
                            >
                              <Price
                                className="css-fisw11"
                                currency="EUR"
                                discounted={false}
                                fractions={true}
                                taxDisclaimer={false}
                                unitPrice={5}
                                unitPriceMin={0}
                              >
                                <div
                                  className="css-izofhs css-fisw11"
                                  data-test-id="minPrice: 0 price: 5 currency: EUR"
                                >
                                  <FormatPrice
                                    className=""
                                    currency="EUR"
                                    fractions={true}
                                    price={5}
                                  >
                                    <span
                                      className=""
                                    >
                                      p
                                    </span>
                                  </FormatPrice>
                                </div>
                              </Price>
                            </div>
                          </ProductPrice>
                        </li>
                      </GridItem>
                    </ul>
                  </Grid>
                </Product>
              </Connect(Product)>
            </li>
          </ListItem>
        </ul>
      </List>
    </GroupedProducts>
  </Connect(GroupedProducts)>
</Provider>
`;
